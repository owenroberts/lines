function Canvas(t,e){Object.assign(Canvas.prototype,t.modulePrototype);const n=this;this.canvas=document.getElementById(e.id),this.ctx=this.canvas.getContext("2d");let o=e.checkRetina&&window.devicePixelRatio||1,i=e.lineWidth||1,a=e.scale||1,s=this.canvas.width,c=this.canvas.height;this.addProp("scale",{get:()=>a,set:t=>{a=+t,n.updateSize()}}),this.addProp("width",{get:()=>s,set:t=>{s=+t,n.updateSize()}}),this.addProp("height",{get:()=>c,set:t=>{c=+t,n.updateSize()}}),this.addProp("lineWidth",{get:()=>i,set:t=>{i=+t,n.reset()}}),this.updateSize=function(){n.canvas.width=s*o*a,n.canvas.height=c*o*a,n.reset()},this.reset=function(){n.canvas.style.width=s*a+"px",n.canvas.style.height=c*a+"px",n.ctx.lineWidth=i,n.ctx.miterLimit=1,n.ctx.lineCap="round",n.ctx.lineJoin="round"}}function FileIO(t,e){const n=this;Object.assign(FileIO.prototype,t.modulePrototype);let o=e.projectName||"Animation_"+(new Date).toDateString().replace(/ /g,"-");this.addProp("projectName",{get:()=>o,set:t=>{o=t,document.title=o+" ~ animation editor"}}),this.save=function(){const e={v:"0.1"};e.footage=t.footage.filePaths;const n=JSON.stringify(e),i=new Blob([n],{type:"application/x-download;charset=utf-8"});saveAs(i,o+".json")},this.load=function(e){console.log(e),n.projectName=e.split("/").pop().replace(".json",""),fetch(e).then((t=>t.json())).then((e=>{!function(e){t.footage.load(e.footage)}(e)})).catch((t=>{console.error("err",t.message)}))}}function Footage(t){const e=this;let n=!0;const o={};function i(i,a,s){o[a]=new Lines(t.canvas.ctx,30,!0),o[a].loadData(i,(()=>{n&&confirm("Set project settings?")&&(n=!1,t.ui.faces.width.update(i.w),t.ui.faces.height.update(i.h))}));const c=new UIButton({text:a,callback:()=>{console.log(a,o[a])}});e.panel.footageRow.append(c),e.filePaths.push(s)}function a(t){for(let e,n=0;e=t[n];n++){if(!e.type.match("application/json"))continue;const t=new FileReader;t.onload=function(t){const n=directoryPath+e.name,o=e.name.split(".")[0];i(JSON.parse(t.target.result),o,n)},t.readAsText(e)}}this.filePaths=[],this.load=function(t){t.forEach((t=>{const e=t.split("/").pop().replace(".json","");fetch(t).then((t=>t.json())).then((n=>i(n,e,t))).catch((t=>{console.error("err",t.message)}))}))},this.openFile=function(){prompt("Directory?","/drawings/");const t=document.createElement("input");t.type="file",t.multiple=!0,t.click(),t.onchange=function(){a(t.files)}}}window.addEventListener("load",(function(){const t={};t.modulePrototype={addProp(t,e){Object.defineProperty(this,t,{get:e.get,set:e.set})}};const e={};location.search.substr(1).split("&").map((t=>{let[n,o]=t.split("=");e[n]=o})),t.canvas=new Canvas(t,{id:"lines",checkRetina:!0}),t.footage=new Footage(t),t.fio=new FileIO(t,{}),t.ui=new Interface(t),t.ui.settings=new Settings(t,"anim-editor"),t.ui.load("./interface/interface.json",(()=>{e.src&&t.fio.load(e.src),t.ui.settings.load()})),console.log(t)}));
//# sourceMappingURL=src_maps/animEditor.min.js.map
