class Clip{constructor(t){this.name=t.name,this.filePath=t.filePath,this.animation=t.animation,this.startFrame=t.startFrame,this.isVisible=!0,this.state="default",console.log(t),this.animation.isPlaying=!0}get endFrame(){return this.startFrame+this.animation.endFrame}update(t){this.animation.frame=t-this.startFrame}draw(){this.animation.update(),this.animation.draw()}get data(){return{name:this.name,filePath:this.filePath,startFrame:this.startFrame,isVisible:this.isVisible,state:this.state}}}class Composition{constructor(t){this.tracks=[],t.tracks?t.tracks.forEach((t=>{this.tracks.push(new Track(t))})):this.tracks.push(new Track({})),this.activeTrackIndex=t.activeTrackIndex||0,this.isVisible=void 0===t.isVisible||t.isVisible}addTrack(){this.tracks.push(new Track({}))}addComposition(t){this.track.addComposition(t)}get track(){return this.tracks[this.activeTrackIndex]}set track(t){this.activeTrackIndex=+t}get endFrame(){return Math.max(...this.tracks.map((t=>t.endFrame)))}update(t){for(let e=0;e<this.tracks.length;e++)this.tracks[e].update(t)}draw(t){for(let e=0;e<this.tracks.length;e++)this.tracks[e].draw(t)}get data(){return{tracks:this.tracks.map((t=>t.data)),activeTrackIndex:this.activeTrackIndex,isVisible:this.isVisible}}}class Track{constructor(t){this.clips=[],t.clips&&t.clips.forEach((t=>{this.addClip(new Clip(t))})),this.startFrame=t.startFrame||0,this.label=t.label,this.isVisible=void 0===t.isVisible||t.isVisible}get endFrame(){return this.startFrame+Math.max(...this.clips.map((t=>t.endFrame)))}addClip(t){this.clips.push(t)}update(t){for(let e=0;e<this.clips.length;e++){const i=this.clips[e];if(!(t<i.startFrame)&&!(t>i.endFrame)){i.update(t);break}}}draw(t){for(let e=0;e<this.clips.length;e++){const i=this.clips[e];if(!(t<i.startFrame)&&!(t>i.endFrame)){i.draw(t);break}}}get data(){const t={clips:this.clips.map((t=>t.data)),startFrame:this.startFrame,isVisible:this.isVisible};return this.label&&(t.label=this.label),t}}class UIClip extends UICollection{constructor(t,e){super(e),console.log(t);const i=new UILabel({text:t.name}),n=new UIToggleCheck({isOn:t.isVisible,callback:e=>{t.isVisible=void 0!==e?e:!t.isVisible}}),a=new UIButton({text:"Edit",callback:()=>{let e=location.pathname.includes("lines")?"lines/":"";window.open(`${location.origin}/${e}animate/?src=${t.filePath}`,"anim")}});this.append(i),this.append(n),this.append(a)}}class UITrack extends UICollection{constructor(t,e){super(e),console.log(t);const i=new UIText({text:t.label||"Track "+e.index,callback:e=>{t.label=e}}),n=new UIToggleCheck({isOn:t.isVisible,callback:e=>{t.isVisible=void 0!==e?e:!t.isVisible}});this.append(i),this.append(n)}}function Canvas(t,e){Object.assign(Canvas.prototype,ModuleMixin);const i=this;this.canvas=document.getElementById(e.id),this.ctx=this.canvas.getContext("2d");let n=e.checkRetina&&window.devicePixelRatio||1,a=e.lineWidth||1,s=e.scale||1,o=this.canvas.width,r=this.canvas.height;this.addProp("scale",{get:()=>s,set:t=>{s=+t,i.updateSize()}}),this.addProp("width",{get:()=>o,set:t=>{o=+t,i.updateSize()}}),this.addProp("height",{get:()=>r,set:t=>{r=+t,i.updateSize()}}),this.addProp("lineWidth",{get:()=>a,set:t=>{a=+t,i.reset()}}),this.updateSize=function(){i.canvas.width=o*n*s,i.canvas.height=r*n*s,i.ctx.scale(1,1),i.ctx.scale(n,n),i.ctx.scale(s,s),i.reset()},this.reset=function(){i.canvas.style.width=o*s+"px",i.canvas.style.height=r*s+"px",i.ctx.lineWidth=a,i.ctx.miterLimit=1,i.ctx.lineCap="round",i.ctx.lineJoin="round"}}function Compositions(t){Object.assign(Compositions.prototype,ModuleMixin);const e=this,i={default:new Composition({})};this.addProp("data",{get:()=>{const t={};for(const e in i)t[e]=i[e].data;return t}}),this.addComposition=function(t,n){t||(t=prompt("Composition name","New Composition")),i[t]=new Composition(n||{}),e.addUI(t)},this.load=function(t){for(const i in t)e.addComposition(i,t[i])},this.get=function(t){return i[t]},this.addUI=function(n){const a=n+"-row",s=e.panel.addRow(a);e.panel[a].append(new UILabel({text:n})),e.panel[a].append(new UIButton({text:"Edit",callback:()=>{t.timeline.composition=n}})),e.panel[a].append(new UIButton({text:"+",callback:()=>{t.timeline.composition.addComposition(i[n])}})),e.panel[a].append(new UIButton({text:"X",callback:()=>{delete i[n],e.panel.removeRow(s)}}))}}function FileIO(t,e){Object.assign(FileIO.prototype,ModuleMixin);const i=this;let n=e.projectName||"Animation_"+(new Date).toDateString().replace(/ /g,"-");function a(e){t.footage.load(e.footage,!0,(()=>{!function(e){for(const i in e)for(let n=0;n<e[i].tracks.length;n++){const a=e[i].tracks[n];for(let s=0;s<a.clips.length;s++){const o=a.clips[s];e[i].tracks[n].clips[s].animation=t.footage.get(o.name)}}t.compositions.load(e),t.timeline.addUI()}(e.compositions)}))}this.addProp("projectName",{get:()=>n,set:t=>{n=t,document.title=n+" ~ animation editor"}}),this.save=function(){const e={v:"0.1"};e.footage=t.footage.filePaths,e.compositions=t.compositions.data;const i=JSON.stringify(e),a=new Blob([i],{type:"application/x-download;charset=utf-8"});saveAs(a,n+".json")},this.load=function(t){i.projectName=t.split("/").pop().replace(".json",""),fetch(t).then((t=>t.json())).then((t=>{a(t)})).catch((t=>{console.error("err",t.message)}))}}function Footage(t){const e=this;let i=!0;const n={};function a(a,s,o,r){n[s]=new Lines(t.canvas.ctx,30,!0),n[s].loadData(a,(()=>{(r||i&&confirm("Set project settings?"))&&(i=!1,t.ui.faces.width.update(a.w),t.ui.faces.height.update(a.h))}));const c=new UIButton({text:s,callback:()=>{const e=new Clip({filePath:o,name:s,animation:n[s],startFrame:t.renderer.frame});t.timeline.addClip(e)}});e.panel.footageRow.append(c),e.filePaths.push(o)}this.filePaths=[],this.load=function(t,e,i){let n=0,s=t.length;t.forEach((t=>{const o=t.split("/").pop().replace(".json","");fetch(t).then((t=>t.json())).then((r=>{a(r,o,t,e),n++,n===s&&i&&i()}))}))},this.openFile=function(){const t=document.createElement("input");t.type="file",t.multiple=!0,t.click(),t.onchange=function(){let e=prompt("Directory?","/drawings/");!function(t,e){for(let i,n=0;i=t[n];n++){if(!i.type.match("application/json"))continue;const t=new FileReader;t.onload=function(t){const n=e+i.name,s=i.name.split(".")[0];a(JSON.parse(t.target.result),s,n)},t.readAsText(i)}}(t.files,e)}},this.get=function(t){return n[t]}}const ModuleMixin={addProp(t,e){Object.defineProperty(this,t,{get:e.get,set:e.set})}};function Renderer(t,e,i){Object.assign(Renderer.prototype,ModuleMixin);const n=this;e||(e=30);let a=1e3/e,s=performance.now(),o=!1,r=0;window.drawCount=0,this.isPlaying=!1,this.addProp("dps",{get:()=>e,set:t=>{a=1e3/(e=+t),dpf=Math.round(e/i)}}),this.addProp("fps",{get:()=>i,set:t=>{i=+t,dpf=Math.round(e/i)}}),this.nextFrame=function(e){"+1"===e?n.frame=r+1:"-1"===e?n.frame=r-1:"end"===e&&(n.frame=t.timeline.composition.endFrame-1)},this.addProp("frame",{get:()=>r,set:e=>{let i=+e;i<=t.timeline.composition.endFrame-1&&i>=0&&(r=i),t.ui.faces.frameDisplay.value=r,t.timeline.updateUI()}}),this.addProp("isPlaying",{get:()=>o,set:t=>{o=t}}),this.update=function(e,i){(performance.now()>a+s||i)&&(s=performance.now(),t.canvas.ctx.clearRect(0,0,t.canvas.width,t.canvas.height),t.timeline.update(r),t.timeline.draw(),o&&(n.frame++,r>=t.timeline.composition.endFrame&&(n.frame=0)),window.drawCount++),i||window.requestAnimFrame(n.update)},this.start=function(){window.requestAnimFrame(n.update)}}function Timeline(t){Object.assign(Timeline.prototype,ModuleMixin);const e=this,i="default";this.addProp("composition",{get:()=>t.compositions.get(i),set:t=>{i=t,e.panel.timeline.clear()}}),this.addClip=function(t){e.composition.track.addClip(t)},this.update=function(t){e.composition.update(t)},this.draw=function(){e.composition.draw()};let n=!1;this.addUI=function(){const a=t.compositions.get(i),{endFrame:s,tracks:o}=a;e.panel.timeline.setProp("--num-frames",s),e.panel.timeline.setProp("--num-tracks",o.length);for(let i=0;i<s;i++){const n="frame-"+i,a=new UIButton({type:"frame",text:`${i}`,css:{gridColumnStart:2+2*i,gridColumnEnd:4+2*i},class:i==t.renderer.frame?"current-frame":"",callback:()=>{t.renderer.frame=i,e.updateUI()}});e.panel.timeline.append(a,n)}for(let t=0;t<o.length;t++){const i="track-"+t,n=o[t],a=new UITrack(n,{index:t,class:"track",css:{gridRowStart:2,gridRowEnd:2}});e.panel.timeline.append(a,i);const{clips:s}=n;for(let t=0;t<s.length;t++){const i=s[t],a="clip-"+i.name,o=new UIClip(i,{class:"clip",css:{gridColumnStart:2+n.startFrame+i.startFrame,gridColumnEnd:2+n.startFrame+2*i.endFrame}});e.panel.timeline.append(o,a)}}n=!0},this.updateUI=function(){if(!n)return;const i=document.getElementsByClassName("current-frame");i[0]&&i[0].classList.remove("current-frame"),e.panel.timeline["frame-"+t.renderer.frame].addClass("current-frame")}}window.addEventListener("load",(function(){const t={};t.addProp=Object.defineProperty;const e={};location.search.substr(1).split("&").map((t=>{let[i,n]=t.split("=");e[i]=n})),t.canvas=new Canvas(t,{id:"lines",checkRetina:!0}),t.timeline=new Timeline(t),t.compositions=new Compositions(t),t.footage=new Footage(t),t.fio=new FileIO(t,{}),t.renderer=new Renderer(t),t.ui=new Interface(t),t.ui.settings=new Settings(t,"anim-editor"),t.ui.load("./interface/interface.json",(()=>{e.src&&t.fio.load(e.src),t.ui.settings.load(),t.renderer.start()})),console.log(t)}));
//# sourceMappingURL=src_maps/animEditor.min.js.map
