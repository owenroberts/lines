class Sprite{constructor(t,i,s,e){this.position=[Math.round(t)||0,Math.round(i)||0],this.size=[0,0],this.halfWidth=0,this.halfHeight=0,this.debug=!1,this.debugColor="#00ffbb",this.isActive=!0,this.center=!1,s&&this.addAnimation(s,e)}get x(){return this.xy[0]}get y(){return this.xy[1]}get width(){return this.size[0]}get height(){return this.size[1]}get xy(){return this.center?[this.position[0]-this.halfWidth,this.position[1]-this.halfHeight]:this.position}addAnimation(t,i){this.animation=t,this.size=[this.animation.width,this.animation.height],this.halfWidth=Math.round(this.animation.width/2),this.halfHeight=Math.round(this.animation.height/2),i&&i(t)}drawDebug(){GAME.ctx.lineWidth=1,GAME.ctx.beginPath(),GAME.ctx.rect(this.x,this.y,this.width,this.height);const t=GAME.ctx.strokeStyle;GAME.ctx.strokeStyle=this.debugColor,GAME.ctx.stroke(),GAME.ctx.strokeStyle=t,this.label&&GAME.ctx.fillText(this.label,this.position.x,this.position.y),1!==GAME.lineWidth&&(GAME.ctx.lineWidth=GAME.lineWidth)}display(t){let i=!1;i=void 0!==t?t:this.isActive&&this.isOnScreen(),i&&(this.debug&&this.drawDebug(),this.animation&&(this.animation.update(),this.isActive&&this.animation.draw(this.x,this.y,GAME.suspend))),this.displayFunc&&this.displayFunc()}isOnScreen(){return this.x+this.width>0&&this.y+this.height>0&&this.x<GAME.view.width&&this.y<GAME.view.height}}class ColliderSprite extends Sprite{constructor(t,i,s,e){super(t,i),this.collider=[0,0,0,0],this.mouseOver=!1,this.waitToGoOut=!1,this.clickStarted=!1,s&&this.addAnimation(s,e)}addAnimation(t,i){super.addAnimation(t,i),this.collider[2]=this.animation.width,this.collider[3]=this.animation.height}setCollider(t,i,s,e){this.collider=[t,i,s,e]}drawDebug(){GAME.ctx.lineWidth=1,GAME.ctx.beginPath(),GAME.ctx.rect(this.colliderPosition[0],this.colliderPosition[1],this.collider[2],this.collider[3]);const t=GAME.ctx.strokeStyle;GAME.ctx.strokeStyle=this.debugColor,GAME.ctx.stroke(),GAME.ctx.strokeStyle=t,1!==GAME.lineWidth&&(GAME.ctx.lineWidth=GAME.lineWidth)}get colliderPosition(){return[this.x+this.collider[0],this.y+this.collider[1]]}collide(t,i){return!!(this.isActive&&t.isActive&&this.colliderPosition[0]<t.colliderPosition[0]+t.collider[2]&&this.colliderPosition[0]+this.collider[2]>t.colliderPosition[0]&&this.colliderPosition[1]<t.colliderPosition[1]+t.collider[3]&&this.colliderPosition[1]+this.collider[3]>t.colliderPosition[1])&&(i&&i(this),!0)}tap(t,i){return t>this.colliderPosition[0]&&t<this.colliderPosition[0]+this.collider[2]&&i>this.colliderPosition[1]&&i<this.colliderPosition[1]+this.collider[3]}outside(t){var i=this.position.copy(),s=this.collider.position.copy();i.add(s),i.add(this.velocity);var e=this.collider.size.copy();return i.x<t.position.x+t.collider.position.x||i.x+e.x>t.position.x+t.collider.position.x+t.collider.size.x||i.y<t.position.y+t.collider.position.y||i.y+e.y>t.position.y+t.collider.position.y+t.collider.size.y}over(t,i){return!(!this.isActive||!this.tap(t,i)||this.mouseOver||this.waitToGoOut)&&(this.mouseOver=!0,this.onOver&&this.onOver(),!0)}out(t,i){return!(!this.isActive||this.tap(t,i)||!this.mouseOver&&!this.waitToGoOut)&&(this.clickStarted=!1,this.waitToGoOut=!1,this.mouseOver=!1,this.onOut&&this.onOut(),!0)}down(t,i){return!(!this.isActive||!this.tap(t,i))&&(this.clickStarted=!0,this.waitToGoOut=!0,this.onDown&&this.onDown(),!0)}up(t,i){return!!(this.isActive&&this.tap(t,i)&&this.clickStarted)&&(this.mouseOver=!1,this.onUp&&this.onUp(),this.onClick&&this.onClick(t,i),this.func&&this.func(),!0)}}class UI extends ColliderSprite{constructor(t,i){let s=t.x,e=t.y;s%1!=0&&(s=Math.round(GAME.view.width*s)),s<0&&(s=Math.round(GAME.view.width+s)),e%1!=0&&(e=Math.round(GAME.view.height*e)),e<0&&(e=Math.round(GAME.view.height+e)),s=Math.round(s),e=Math.round(e),super(s,e),this.debug=i,this.center=void 0===t.center||t.center,t.hidden&&(this.isActive=!1),t.animation&&(this.addAnimation(t.animation),this.animation.isPlaying=!0),t.states&&(this.animation.states=t.states,this.animation.state="idle"),t.isButton&&(this.animation.states={idle:{start:0,end:0},over:{start:1,end:1},down:{start:2,end:2}},this.onOver=function(){this.animation.state="over"},this.onOut=function(){this.animation.state="idle"},this.onDown=function(){this.animation.state="down"},this.onUp=function(){this.animation.state="over"},this.animation.state="idle"),this.scenes=t.scenes,t.func&&(this.func=window[t.func]),t.callback&&(this.callback=t.callback),t.onClick&&(this.onClick=t.onClick),t.onOver&&(this.onOver=t.onOver),t.onOut&&(this.onOut=t.onOut),t.onUp&&(this.onUp=t.onUp),t.onDown&&(this.onDown=t.onDown)}}class Scene{constructor(){this.displaySprites=new SpriteCollection,this.updateSprites=new SpriteCollection,this.uiSprites=new SpriteCollection}add(t){this.displaySprites.add(t),this.updateSprites.add(t),this.uiSprites.add(t)}remove(t,i){const s=i?[i]:["display","update","ui"];for(let i=0;i<s.length;i++)this[s[i]+"Sprites"].remove(t)}addSprite(t){this.displaySprites.add(t),this.updateSprites.add(t)}addUI(t){this.displaySprites.add(t),this.uiSprites.add(t)}addToDisplay(t){this.displaySprites.add(t)}addToUpdate(t){this.updateSprites.add(t)}addToUI(t){this.uiSprites.add(t)}display(t){this.displaySprites.all(i=>{i.display(t)})}update(t){this.updateSprites.all(i=>{i.update(t)})}mouseMoved(t,i){this.uiSprites.all(s=>{s.over(t,i),s.out(t,i)})}mouseDown(t,i){this.uiSprites.all(s=>{s.down(t,i)})}mouseUp(t,i){this.uiSprites.all(s=>{s.up(t,i)})}}class Button extends UI{constructor(t,i){super(t,i),this.mouseOver=!1,this.waitToGoOut=!1,this.clickStarted=!1,t.onOver&&(this.onOver=t.onOver),t.onOut&&(this.onOut=t.onOut),t.onDown&&(this.onDown=t.onDown),t.onClick&&(this.onClick=t.onClick)}over(t,i){const s=super.over(t,i);return s&&(this.animation.state="over"),s}out(t,i){const s=super.out(t,i);return s&&(this.animation.state="idle"),s}down(t,i){const s=super.down(t,i);return s&&(this.animation.state="active"),s}up(t,i){const s=super.up(t,i);return s&&(this.animation.state="idle"),s}}class Collider{constructor(t,i,s,e){this.position=[t,i],this.size=[s,e],this.mouseOver=!1,this.waitToGoOut=!1,this.clickStarted=!1}set(t,i,s,e){this.position=[t,i],this.size=[t,i]}}class ColliderEntity extends ColliderSprite{constructor(t,i){super(t.x,t.y),this.debug=i,this.origin=[t.x,t.y],t.animation&&this.addAnimation(t.animation),void 0!==t.loop&&(this.animation.loop=t.loop),t.play&&this.animation.play(),this.center=void 0===t.center||t.center}update(t){this.position[0]=this.origin[0]+t[0],this.position[1]=this.origin[1]+t[1]}setPosition(t,i){this.origin[0]=t,this.origin[1]=i}}class Entity extends Sprite{constructor(t,i){super(t.x,t.y,t.animation),this.debug=i,this.origin=[t.x,t.y],void 0!==t.loop&&(this.animation.loop=t.loop),t.play&&this.animation.play(),this.center=void 0===t.center||t.center}update(t){this.position[0]=this.origin[0]+t[0],this.position[1]=this.origin[1]+t[1]}setPosition(t,i){this.origin[0]=t,this.origin[1]=i}}class Game{constructor(t){window.GAME=this,this.canvas=document.getElementById(t.canvas||"lines");let i=.01;if(t.testPerformance){const t=[];console.groupCollapsed("perf test");for(let i=0;i<5;i++)t.push(Cool.testPerformance());i=t.reduce((t,i)=>t+i)/t.length,console.log("perf avg",i),console.groupEnd("perf test")}if(this.width=t.width,this.height=t.height,this.halfWidth=Math.round(t.width/2),this.halfHeight=Math.round(t.height/2),this.multiColor=t.multiColor||!1,this.debug=t.debug||!1,this.suspendOnTimeOver=t.suspend||!1,this.suspend=!1,this.editorSuspend=!1,this.lineWidth=t.lineWidth||1,this.checkRetina=void 0===t.checkRetina||t.checkRetina,this.zoom=t.zoom,this.relativeLoadPath=t.relativeLoadPath,this.dps=t.dps||30,this.drawTime=performance.now(),this.drawInterval=1e3/this.dps,window.drawCount=0,this.updateTime=performance.now(),this.updateInterval=1e3/60,this.clearBg=void 0===t.clearBg||t.clearBg,this.bounds=t.bounds||{top:0,bottom:0,left:0,right:0},this.scenes=new SceneManager(t.scenes,Scene),this.data={jsons:{}},this.saveJsons=t.saveJsons||!1,this.anims={},this.useMouseEvents=!t.events||t.events.includes("mouse"),this.useKeyboardEvents=!t.events||t.events.includes("keyboard"),this.useTouchEvents=!!t.events&&t.events.includes("touch"),this.view={width:this.width,height:this.height},this.canvas.getContext){this.ctx=this.canvas.getContext("2d"),this.dpr=this.checkRetina&&window.devicePixelRatio||1;const s=t.zoom||1;this.zoom=t.zoom;const e=t.isEditor?this.dpr:1;this.canvas.width=this.width*this.dpr,this.canvas.height=this.height*this.dpr,this.canvas.style.width=this.width+"px",this.canvas.style.height=this.height+"px",this.view.width=Math.round(this.width/s*e),this.view.height=Math.round(this.height/s*e),this.view.halfWidth=this.view.width/2,this.view.halfHeight=this.view.height/2;let h=!1;(i>.1||t.lowPerformance)&&(h=!!t.ignoreAlerts||confirm("Low performance detected, click Okay to use low graphics quality, cancel to continue with high graphics quality.")),h?this.zoom&&(this.width=Math.round(this.width/this.zoom),this.height=Math.round(this.height/this.zoom),this.halfWidth=Math.round(this.width/2),this.halfHeight=Math.round(this.height/2),this.canvas.width=this.width,this.canvas.height=this.height,t.smallCanvas?(this.canvas.style.width=this.width+"px",this.canvas.style.height=this.height+"px"):t.useSVGFilterOnLow&&!navigator.userAgent.includes("Firefox")&&(t.svgFilter=!0)):(this.ctx.scale(this.dpr,this.dpr),t.zoom&&(this.ctx.scale(e,e),this.ctx.scale(t.zoom,t.zoom))),t.lineColor&&(this.ctx.strokeStyle=t.lineColor),t.stats&&(this.stats=new Stats,document.body.appendChild(this.stats.dom),this.stats.dom.style.left="auto",this.stats.dom.style.right="0px",this.drawStats=new Stats,document.body.appendChild(this.drawStats.dom),this.drawStats.dom.style.left="auto",this.drawStats.dom.style.right="0px",this.drawStats.dom.style.top="48px"),this.ctx.lineWidth=this.lineWidth,this.ctx.miterLimit=1,this.ctx.lineCap="round",this.ctx.lineJoin="round"}if(t.usePixels&&Object.assign(Lines.prototype,PixelMixin),t.antiFactor&&(Object.assign(Lines.prototype,AntiMixin),this.antiFactor=t.antiFactor,this.canvas.width=this.width*this.dpr*this.antiFactor,this.canvas.height=this.height*this.dpr*this.antiFactor,t.smallCanvas&&(this.canvas.style.width=this.width*this.dpr+"px",this.canvas.style.height=this.height*this.dpr+"px"),this.ctx.lineWidth=this.lineWidth*this.antiFactor),t.svgFilter){const t="http://www.w3.org/2000/svg",i=document.createElementNS(t,"svg"),s=document.createElementNS(t,"defs"),e=document.createElementNS(t,"filter"),h=document.createElementNS(t,"feComponentTransfer"),o=document.createElementNS(t,"feFuncA");i.setAttribute("style","position:absolute;z-index:-1;"),i.setAttribute("width","0"),i.setAttribute("height","0"),document.body.appendChild(i),i.appendChild(s),s.appendChild(e),e.setAttribute("id","remove-alpha"),e.setAttribute("x","0"),e.setAttribute("y","0"),e.setAttribute("width","100%"),e.setAttribute("height","100%"),e.appendChild(h),h.appendChild(o),o.setAttribute("type","discrete"),o.setAttribute("tableValues","0 1"),this.ctx.filter="url(#remove-alpha)"}}setView(t,i){this.width=t,this.height=i,this.halfWidth=t/2,this.halfHeight=i/2,this.canvas.width=this.width*this.dpr,this.canvas.height=this.height*this.dpr,this.ctx.scale(this.dpr,this.dpr),this.canvas.style.zoom=1/this.dpr,this.view.width=Math.round(this.width/this.zoom),this.view.height=Math.round(this.height/this.zoom),this.view.halfWidth=this.view.width/2,this.view.halfHeight=this.view.height/2,this.zoom&&this.ctx.scale(this.zoom,this.zoom),this.ctx.lineWidth=this.lineWidth,this.ctx.miterLimit=1}load(t,i,s){this.debug&&console.log("loading data"),this.debug&&console.time("load data"),this.assetsLoaded={};const e=Object.keys(t).length;for(const s in t){const e=t[s];fetch(e).then(t=>{if(t.ok)return t.url.includes("csv")?t.text():t.json();throw new Error("Network response was not ok.")}).then(t=>{if(this.data[s]={},this.anims[s]={},this.assetsLoaded[s]={},"object"==typeof t){this.data[s].entries=t;for(const e in t)this.assetsLoaded[s][e]=!!i,i||this.loadJSON(s,e,t[e].src),this.data[s].entries[e].src=t[e].src}else{const i=CSVToArray(t,",").splice(0);this.data[s].entries=[];const e=i[0];for(let t=1;t<i.length;t++){const h={};for(let s=0;s<e.length;s++)h[e[s]]=i[t][s];this.data[s].entries.push(h),this.assetsLoaded[s][h.label]=!1,this.loadJSON(s,h.label,`drawings/${s}/${h.label}.json`)}}}).catch(t=>{console.error(t),this.assetsLoaded[s]=!0})}const h=setInterval(()=>{let t=Object.keys(this.assetsLoaded).length==e;for(const i in this.assetsLoaded)for(const s in this.assetsLoaded[i])this.assetsLoaded[i][s]||(t=!1);t&&(this.debug&&console.timeEnd("load data"),clearInterval(h),this._start())},1e3/60)}loadAssets(t,i){this.debug&&console.log("loading assets"),this.debug&&console.time("load assets");const s=Object.keys(i).length;this.assetsLoaded={},this.data[t]={},this.anims[t]={},this.assetsLoaded[t]={},this.data[t].entries=i;for(const s in i)this.assetsLoaded[t][s]=!1,this.loadJSON(t,s,i[s]);const e=setInterval(()=>{let i=Object.keys(this.assetsLoaded[t]).length===s;for(const s in this.assetsLoaded[t])this.assetsLoaded[t][s]||(i=!1);i&&(this.debug&&console.timeEnd("load assets"),clearInterval(e),this._start())},1e3/60)}loadJSON(t,i,s){this.relativeLoadPath&&(s="."+s),fetch(s).then(t=>t.json()).then(e=>{this.saveJsons&&(this.data.jsons[s]=e),this.anims[t][i]=new GameAnim,this.anims[t][i].src=s,this.anims[t][i].loadData(e,()=>{this.assetsLoaded[t][i]=!0})})}_start(){this.drawTime=performance.now(),this.updateTime=performance.now(),this.start&&this.start(),this.update||(this.noUpdate=!0),requestAnimFrame(()=>{this._update()}),this.useMouseEvents&&this.startMouseEvents(),this.useKeyboardEvents&&this.startKeyboardEvents(),this.useTouchEvents&&this.startTouchEvents(),this.sizeCanvas&&window.addEventListener("resize",this.sizeCanvas,!1)}_draw(t){this.stats&&this.drawStats.begin(),this.clearBg&&this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.draw(t-this.drawTime),drawCount++,this.drawTime=t-(t-this.drawTime)%this.drawInterval,this.stats&&this.drawStats.end()}_update(){if(this.pauseGame)return;this.stats&&this.stats.begin(),requestAnimFrame(()=>{this._update()});const t=performance.now();t>this.updateTime+this.updateInterval&&(this.suspendOnTimeOver&&!this.editorSuspend&&(!this.suspend&&t-this.updateTime>1.5*this.drawInterval?this.suspend=!0:this.suspend&&(this.suspend=!1)),this.noUpdate||this.update(t-this.updateTime),this.updateTime=t-(t-this.updateTime)%this.updateInterval),t>this.drawTime+this.drawInterval&&this._draw(t),this.stats&&this.stats.end()}setBounds(t,i){this.bounds[t]=Math.round(i)}updateBounds(t){t.y<this.bounds.top&&(this.bounds.top=Math.round(t.y)),t.y>this.bounds.bottom&&(this.bounds.bottom=Math.round(t.y+this.height)),t.x>this.bounds.right&&(this.bounds.right=Math.round(t.x+this.width/2)),t.x<this.bounds.left&&(this.bounds.left=Math.round(t.x-this.width/2))}startMouseEvents(){let t,i=!1;this.canvas.addEventListener("click",t=>{t.preventDefault(),this.mouseClicked&&this.mouseClicked(t.offsetX/this.zoom,t.offsetY/this.zoom)},!1),this.canvas.addEventListener("mousedown",s=>{s.preventDefault(),this.mouseDown&&this.mouseDown(s.offsetX/this.zoom,s.offsetY/this.zoom,s.which,s.shiftKey),this.startDrag&&(t=startDrag(s.offsetX,s.offsetY),t&&(i=!0))},!1),this.canvas.addEventListener("mouseup",t=>{t.preventDefault(),this.mouseUp&&this.mouseUp(t.offsetX/this.zoom,t.offsetY/this.zoom,t.which),i&&(i=!1)},!1),this.canvas.addEventListener("mousemove",s=>{this.mouseMoved&&this.mouseMoved(s.offsetX/this.zoom,s.offsetY/this.zoom,s.which),i&&drag(s.offsetX/this.zoom,s.offsetY/this.zoom,t)},!1)}startTouchEvents(){this.canvas.addEventListener("touchstart",t=>{t.preventDefault(),this.touchStart&&this.touchStart(t)},!1),this.canvas.addEventListener("touchmove",t=>{t.preventDefault(),this.touchMove&&this.touchMove(t)},!1),this.canvas.addEventListener("touchend",t=>{t.preventDefault(),this.touchEnd&&this.touchEnd(t)},!1)}startKeyboardEvents(){document.addEventListener("keydown",t=>{this.keyDown&&"INPUT"!==t.target.tagName&&this.keyDown(Cool.keys[t.which])}),document.addEventListener("keyup",t=>{this.keyUp&&"INPUT"!==t.target.tagName&&this.keyUp(Cool.keys[t.which])})}}class GameAnim extends Lines{constructor(t){super(GAME.ctx,GAME.dps,GAME.multiColor),this.debug=t,this.loop=!0,this.randomFrames=!1,this.prevFrame=0,this.frames=[]}update(){if(this.isPlaying){if(this.drawCount==this.drawsPerFrame){if(this.randomFrames){for(;this.prevFrame===this.currentFrame;)this.currentFrame=Cool.randomInt(this.state.start,this.state.end);this.prevFrame=this.currentFrame}else this.currentFrame>=this.state.end?(this.currentFrame=this.loop?this.state.start:this.state.end,this.onPlayedOnce&&(this.onPlayedOnce(),this.onPlayedOnce=void 0),this.onPlayedState&&this.onPlayedState()):this.currentFrame++;this.drawCount=0}this.drawCount++,this.onUpdate&&this.onUpdate()}}createNewState(t,i,s){this.states[t]||(this.states[t]={start:i,end:s}),this.state=t}playStateCheck(){this.state.start!=this.state.end&&(this.isPlaying=!0)}set state(t){this._state!==t&&this.states[t]&&(this._state=t,this.state&&(this.frame=this.state.start),this.isPlaying||"default"===t||(this.isPlaying=!0))}get state(){return this.states[this._state]}playOnce(t){this.isPlaying||(this.isPlaying=!0),this.frame=this.state.start,this.onPlayedOnce=t}loadData(t,i){super.loadData(t,i),this.setFrames()}setFrames(){for(let t=0,i=this.layers.length;t<i;t++){const i=this.layers[t];for(let s=i.startFrame;s<=i.endFrame;s++)this.frames[s]||(this.frames[s]=[]),this.frames[s].push(t)}}getLayers(){const t=this.frames[this.currentFrame],i=[];for(let s=0;s<t.length;s++)i.push(this.layers[t[s]]);return i}}class Manager{constructor(t,i){for(let s=0;s<t.length;s++)this[t[s]]=new i;this._current=t[0],this.names=t}set current(t){this._current=t}get current(){return this[this._current]}get currentName(){return this._current}get list(){return this.names}}class SHGScene extends Scene{constructor(t,i,s){super();const e=t.right-t.left,h=t.bottom-t.top;this.grid=new SpatialHashGrid(t,e/i,h/s),this.view=[i,s],this.halfView=[i/2,s/2],this.clients=[]}addSprite(t){this.grid.addSprite(t)}display(){for(let t=0;t<this.clients.length;t++)this.clients[t].sprite.display()}update(t,i){this.clients=this.grid.findNear(i[0]-this.halfView[0],i[1]-this.halfView[1],this.view[0],this.view[1]);for(let i=0;i<this.clients.length;i++)this.clients[i].sprite.update(t)}}class SceneManager extends Manager{add(t,i,s){"string"==typeof i&&(i=[i]);for(let e=0;e<i.length;e++)"display"==s?this[i[e]].addToDisplay(t):"ui"==s?this[i[e]].addUI(t):this[i[e]].addSprite(t)}addToDisplay(t,i){this.add(t,i,"display")}addUI(t,i){this.add(t,i,"ui")}}class SpatialHashGrid{constructor(t,i,s){this.bounds=[[t.left,t.top],[t.right,t.bottom]],this.columns=Math.floor(i),this.rows=Math.floor(s),this.mapSize=[t.right-t.left,t.bottom-t.top],this.cellSize=[Math.round(this.mapSize[0]/this.columns),Math.round(this.mapSize[1]/this.rows)],this.cells=new Array(this.columns*this.rows);for(let t=0;t<this.columns;t++)for(let i=0;i<this.rows;i++)this.cells[this.columns*i+t]=[];this.ids=-1}findNear(t,i,s,e){const h=this.getCellIndex([t-s/2,i-e/2]),o=this.getCellIndex([t+s/2,i+e/2]),a=[],n=this.ids++;for(let t=Math.max(h[0]-1,0);t<=o[0];t++)for(let i=h[1];i<=o[1];i++){const s=this.cells[this.columns*i+t];for(let t=0;t<s.length;t++)s[t].id!==n&&(s[t].id=n,a.push(s[t]))}return a}addSprite(t){this.addClient(t.x,t.y,t.width,t.height,t)}addClient(t,i,s,e,h){const o=this.getCellIndex([t-s/2,i-e/2]),a=this.getCellIndex([t+s/2,i+e/2]),n={position:[t,i],dimensions:[s,e],indexes:[o,a],sprite:h,id:-1};for(let t=o[0];t<=a[0];t++)for(let i=o[1];i<=a[1];i++)this.cells[this.columns*i+t].push(n)}getCellIndex(t){const i=Math.floor((t[0]-this.bounds[0][0])/this.cellSize[0]),s=Math.floor((t[1]-this.bounds[0][1])/this.cellSize[1]);return[Math.max(0,Math.min(i,this.columns-1)),Math.max(0,Math.min(s,this.rows-1))]}}class SpriteCollection{constructor(t){this.sprites=t?[...t]:[]}get length(){return this.sprites.length}includes(t){return this.sprites.includes(t)}sprite(t){return this.sprites[t]}remove(t){this.sprites.splice(this.sprites.indexOf(t),1)}clear(){this.sprites=[]}add(t){this.sprites.includes(t)||this.sprites.push(t)}all(t){for(let i=0;i<this.sprites.length;i++)t(this.sprites[i],i)}update(){this.all(t=>{t.update()})}display(){this.all(t=>{t.display()})}over(t,i){this.all(s=>{s.over(t,i)})}out(t,i){this.all(s=>{s.out(t,i)})}down(t,i){this.all(s=>{s.down(t,i)})}up(t,i){this.all(s=>{s.up(t,i)})}}class Text{constructor(t,i,s,e,h,o){if(this.x=Math.round(t),this.y=Math.round(i),this.lead=35,this.track=18,this.wrap=e,this.isActive=!0,this.letters=h,this.breaks=[],this.count=0,this.end=0,this.delay=0,this.countCount=.5,this.endCount=.5,this.endDelay=GAME.dps||10,this.hover=!1,this.clickStarted=!1,this.setMsg(s),!h.states[0]){const t=o||"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ.,:?-+'&$;\"!";for(let i=0;i<t.length;i++)h.createNewState(t[i],i,i)}}setPosition(t,i){this.x=t,this.y=i}center(){this.x-=this.track*Math.min(this.msg.length,this.wrap)/2}setMsg(t){this.msg=t.replace(/\s+$/,""),this.setBreaks();let i=this.breaks.map((t,i)=>i>0?t-this.breaks[i]:t);this.width=this.breaks.length<=0?this.track*this.msg.length:this.track*Math.max(0,...i),this.height=(this.breaks.length+1)*this.lead,this.reset()}setBreaks(){let t=!1,i=0,s=!1;this.breaks=[];for(let e=1;e<this.msg.length;e++)if(s=!1,!this.msg[e].match(/[\n\r]/g)||s)if(e%this.wrap!==i||t)" "===this.msg[e]&&t&&(this.breaks.push(e),i=e%this.wrap,t=!1,s=!0);else{let i=Math.round(this.wrap/2),h=this.msg.substring(e,e+i);if(" "===this.msg[e])this.breaks.push(e),s=!0;else if(!h.match(/[\n\r\s]/g)&&h.length>=i){for(let t=e-1;t>=i;t--)if(" "===this.msg[t]){this.breaks.push(t),s=!0;break}}else t=!0}else this.breaks.push(e),i=e%this.wrap,t=!1}reset(){this.end=0,this.count=0,this.delay=0}display(t,i,s){if(!this.isActive)return!0;t=t||this.countForward,i=i||this.countBackward,s=s||this.yAbove;const e=t?Math.floor(this.count):this.msg.length,h=i?this.end:0;let o=this.x,a=this.y-(s?(this.breaks.length+1)*this.lead:0);for(let t=0;t<e;t++){var n=this.msg[t];" "===n||"_"===n||t<h?o+=this.track:"\n"===n||"\r"===n||(this.letters.state=n,this.letters.draw(o,a),o+=this.track),-1!==this.breaks.indexOf(t)&&(a+=this.lead,o=this.x)}if(this.count<this.msg.length&&(this.count+=this.countCount),this.count>=this.msg.length&&(this.delay<this.endDelay?this.delay+=1:this.end+=this.endCount),i){if(this.end>=this.msg.length)return this.reset(),this.onDialogEnd&&this.onDialogEnd(),!0}else if(this.end>=this.endDelay)return this.reset(),this.onDialogEnd&&this.onDialogEnd(),!0}}class TextButton extends UI{constructor(t,i,s,e,h){super({x:t,y:i}),this.center=!1,this.text=new Text(this.position.x,this.position.y,s,e,h),this.setCollider()}setMsg(t){this.text.setMsg(t),this.text.wrap=t.length,this.setCollider()}setCollider(){this.size.x=this.collider.size.x=(this.text.wrap<this.text.msg.length?this.text.wrap:this.text.msg.length)*this.text.track,this.size.y=this.collider.size.y=(this.text.breaks.length+1)*this.text.letters.height}display(){super.display(),this.isActive&&this.text.display()}setPosition(t,i){this.position.x=t,this.position.y=i,this.text.setPosition(t,i)}}class Texture{constructor(t,i){this.locations=t.locations||[],this.frame=t.frame||"index",this.debug=i,this.center=t.center||!1,this.offset=[0,0],t.animation&&this.addAnimation(t.animation),t.locations&&t.animation&&this.addLocations()}addAnimation(t){this.animation=t,this.halfWidth=Math.round(t.width/2),this.halfHeight=Math.round(t.height/2)}addLocation(t,i,s){const e=[t,i];if(void 0!==s)this.animation.createNewState("f-"+s,s,s),e.i=s;else if("randomIndex"==this.frame){let t=Cool.randomInt(0,this.animation.endFrame);this.animation.createNewState("f-"+t,t,t),e.i=t}this.locations.push(e)}addLocations(t){t&&this.locations.push(...t);for(let t=0;t<this.locations.length;t++)if("index"===this.frame)this.locations[t].i=t,this.animation.createNewState("f-"+t,t,t);else if("random"===this.frame)this.animation.randomFrames=!0;else if("randomIndex"===this.frame){let i=Cool.randomInt(0,this.animation.endFrame);this.locations[t].i=i,this.animation.createNewState("f-"+i,i,i)}}display(){for(let t=0;t<this.locations.length;t++){let i=this.locations[t][0]+this.offset[0],s=this.locations[t][1]+this.offset[1];this.center&&(i-=this.halfWidth,s-=this.halfHeight),i+this.animation.width>0&&i<GAME.view.width&&s+this.animation.height>0&&s<GAME.view.height&&(void 0!==this.locations[t].i&&(this.animation.state="f-"+this.locations[t].i),this.animation.draw(i,s,GAME.suspend))}}isOnScreen(){let t=[];for(let i=0;i<this.locations.length;i++){let s=this.locations[i][0]+this.offset[0],e=this.locations[i][1]+this.offset[1];this.center&&(s-=this.halfWidth,e-=this.halfHeight),t.push(s+this.animation.width>0&&s<GAME.view.width&&e+this.animation.height>0&&e<GAME.view.height)}return t}update(t){this.offset[0]=t[0],this.offset[1]=t[1]}}class TextureEntity extends Entity{constructor(t,i){super(t,i),this.center=!1,this.stateName="frame-"+t.stateIndex,this.animation.createNewState("frame-"+t.stateIndex,t.stateIndex,t.stateIndex)}display(t){this.animation.state=this.stateName,super.display(t)}}class Toggle extends Button{constructor(t,i){super(t,i),this.toggled=!1}toggle(t,i=!0){this.toggled=t?"on"==t:!this.toggled,this.animation.state=this.toggled?"selected":"idle",this.waitToGoOut=!1,this.mouseOver=!1,this.clickStarted=!1,i&&(this.func&&this.func(this.toggled),this.onClick&&this.onClick(this.toggled))}out(t,i){super.out(t,i),this.animation.state=this.toggled?"selected":"idle"}up(t,i){super.up(),this.tap(t,i)&&this.clickStarted&&this.toggle()}}
//# sourceMappingURL=src_maps/game.min.js.map
