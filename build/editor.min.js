!function(){"use strict";class t{constructor(t,e){this.isAdded=!1,this.color="#ff00ff",this.panel=e,this.rows=[],this.item=t,this.docked=!1}add(){const t=this;let e=this.panel.addRow("label","label");this.rows.push(e),e.append(new UIText({value:t.item.label,class:"label",callback:function(e){t.item.label=e}}));let s=this.panel.addRow("edit","edit");this.rows.push(s);let n=new UIToggle({text:"🐭",class:"selectable",isOn:this.item.isSelectable,callback:()=>{this.item.isSelectable=!this.item.isSelectable,this.item.isSelectable||this.item.select(!1)}});s.append(n),d.ui.keys.m=n,s.append(new UIToggle({text:"🔓",class:"lock",isOn:!this.item.isLocked,callback:function(){t.item.lock()}})),s.append(new UIButton({text:"✎",class:"edit",callback:function(){window.open(`${location.origin}/${location.pathname.includes("lines")?"lines/":""}animate/?src=${t.item.src}`,"anim")}})),s.append(new UIButton({text:"⇩",class:"loader",callback:function(){t.item.isLoaded=!t.item.isLoaded}})),s.append(new UIButton({text:"🗑️",class:"remove",callback:function(){prompt("remove?")&&(t.item.isRemoved=!0,t.remove())}}));let o=this.panel.addRow("scene","scene");this.rows.push(o),o.append(new UISelect({options:this.item.scenes,selected:this.item.scenes[0],class:"scene-selector",callback:t=>{this.item.scenes[i]=t}})),o.append(new UIButton({text:"+ scene",class:"add-scene",callback:()=>{console.warn("you didnt finish this",this)}})),this.isAdded=!0}remove(){d.ui.keys.m&&delete d.ui.keys.m,this.rows.forEach((t=>{this.panel.removeRow(t)})),this.rows=[],this.isAdded=!1}update(t){for(const e in t)this[e].value=t[e]}toggle(){this.docked?this.remove():this.add(),this.docked=!this.docked}}class e extends GameAnim{constructor(t){super(t)}getLayers(){const t=this.frames[this.currentFrame];if(!t)return[];const e=[];for(let i=0;i<t.length;i++)e.push(this.layers[t[i]]);return e}}class s extends Entity{constructor(t,e,i){super(t,e,i),this.src=t.src||e,this.displayLabel=!1,this.displayOutline=!1,this.label=t.label,this.scenes=t.scenes||["game"],this.ui=new n(this,d.ui.panels.items),this.isLoaded=!1,this.isLocked=!1,this.isSelectable=!0,this.isSelected=!1,this.isRemoved=!1}display(t){!this.isRemoved&&this.isLoaded&&(super.display(this.isInMapBounds(t)),this.displayLabel&&this.drawLabel(),this.displayOutline&&this.drawOutline())}isInMapBounds(t){return this.x+this.width>t.x-GAME.halfWidth&&this.x<t.x-GAME.halfWidth+t.width&&this.y+this.height>t.y-GAME.halfHeight&&this.y<t.y-GAME.halfHeight+t.height}drawLabel(){GAME.ctx.fillText(this.label,this.xy.x,this.xy.y)}drawOutline(){GAME.ctx.strokeStyle=this.isSelected?"#000000":"#7eaba7",GAME.ctx.strokeRect(this.x,this.y,this.width,this.height),GAME.ctx.strokeStyle=this.ui.color,GAME.ctx.beginPath(),GAME.ctx.arc(this.x,this.y,5,0,2*Math.PI,!1),GAME.ctx.stroke()}isMouseOver(t,e,i){if(this.isInMapBounds(i.view)&&this.isSelectable&&this.isLoaded){const s=i.translate(t,e);if(s.x>this.x&&s.x<this.x+this.width&&s.y>this.y&&s.y<this.y+this.height)return this.displayLabel=!0,this.displayOutline=!0,this;if(!this.isSelected)return this.displayLabel=!1,this.displayOutline=!1,!1}}select(t){this.isSelected=t,this.displayLabel=t,this.displayOutline=t,t&&!this.ui.added?this.ui.add():this.ui.isAdded&&this.ui.remove()}update(t){this.isLocked||(this.position[0]+=t[0],this.position[1]+=t[1],this.ui.update({x:this.position[0],y:this.position[1]}))}get data(){return{src:this.src,x:this.position[0],y:this.position[1],scenes:this.scenes}}get settings(){return{isLoaded:this.isLoaded,isLocked:this.isLocked,isSelectable:this.isSelectable}}lock(t){this.isLocked=void 0!==t?t:!this.isLocked}}class n extends t{constructor(t,e){super(t,e)}add(){let t=this.panel.addRow("location","location");this.rows.push(t),t.append(new UILabel({text:"x",class:"x-label"})),this.x=new UIText({value:this.item.position[0],class:"x-input",callback:t=>{this.item.position[0]=+t}}),t.append(this.x),t.append(new UILabel({text:"y",class:"y-label"})),this.y=new UIText({value:this.item.position[1],class:"y-input",callback:t=>{console.log("y",+t),this.item.position[1]=+t}}),t.append(this.y),t.append(new UIButton({text:"📍",class:"focus",callback:()=>{d.zoom.view.x=this.item.position[0],d.zoom.view.y=this.item.position[1]}})),super.add()}}class o extends Entity{constructor(t,e,i){super(t,e,i),this.x=t.x,this.y=t.y}set x(t){this._x=t,this.position.x=t%1!=0?GAME.width*t:t<0?GAME.width+t:t}get x(){return this._x}set y(t){this._y=t,this.position.y=t%1!=0?GAME.height*t:t<0?GAME.height+t:t}get y(){return this._y}display(){GAME.ctx.strokeStyle="#000000",super.display(!0),this.displayLabel&&this.drawLabel(),this.outline&&this.drawOutline()}mouseOver(t,e,i){return t>this.position.x&&t<this.position.x+this.width&&e>this.position.y&&e<this.position.y+this.height?(this.displayLabel=!0,this.outline=!0,i&&(this.selected=!0),this):this.selected?void 0:(this.displayLabel=!1,this.outline=!1,!1)}createUI(){const t=this;super.createUI(),this.ui.x.setValue(this.x),this.ui.x.callback=function(e){t.x=+e},this.ui.y.setValue(this.y),this.ui.y.callback=function(e){t.y=+e}}updatePosition(t,e){this.position.x+=Math.round(t),this.position.y+=Math.round(e)}}class a extends Texture{constructor(t,e){super(t,e),t.src&&(this.src=t.src),this.scenes=t.scenes||["game"],this.label=t.label,this.isLoaded=!1,this.isLocked=!1,this.isSelectable=!0,this.isRemoved=!1,this.ui=new l(this,d.ui.panels.items)}addAnimation(t){this.animation=t,this.addLocations()}addLocation(t,e){this.locations.length>this.animation.endFrame?alert("End of indexes"):super.addLocation(t,e,this.locations.length)}display(t){if(!this.isRemoved&&this.isLoaded)for(let e=0;e<this.locations.length;e++){let i=this.locations[e].x,s=this.locations[e].y;this.isInMapBounds(t,i,s,this.animation.width,this.animation.height)&&(this.center&&(i-=this.animation.width/2,s-=this.animation.height/2),void 0!==this.locations[e].i&&(this.animation.state=`f-${this.locations[e].i}`),this.animation.draw(i,s,GAME.suspend),(this.locations[e].isSelected||this.locations[e].isMoused)&&(this.drawLabel(i,s,e),this.drawOutline(i,s)))}}drawLabel(t,e,i){GAME.ctx.fillText(`${this.label} ${i}`,t,e)}drawOutline(t,e){GAME.ctx.strokeStyle=this.isSelected?"#000000":"#7eaba7",GAME.ctx.strokeRect(t,e,this.animation.width,this.animation.height),GAME.ctx.strokeStyle=this.ui.color,GAME.ctx.beginPath(),GAME.ctx.arc(t,e,5,0,2*Math.PI,!1),GAME.ctx.stroke()}isInMapBounds(t,e,i,s,n){return e+s>t.x-GAME.width/2&&e<t.x-GAME.width/2+t.width&&i+n>t.y-GAME.height/2&&i<t.y-GAME.height/2+t.height}isMouseOver(t,e,i){if(this.isSelectable&&this.isLoaded){let s=!1;for(let n=0;n<this.locations.length;n++){const o=this.locations[n];if(this.isInMapBounds(i.view,o.x,o.y,this.animation.width,this.animation.height)){const n=i.translate(t,e);n.x>o.x&&n.x<o.x+this.animation.width&&n.y>o.y&&n.y<o.y+this.animation.height?(o.isMoused=!0,s||(s=this)):o.isSelected||(o.isMoused=!1)}}return s}}select(t,e){t?this.locations.filter((t=>t.isMoused)).forEach((t=>{e||!t.isSelected||t.isMoused?t.isSelected=!0:t.isSelected=!1,t.isMoused=!1})):this.locations.forEach((t=>{t.isSelected=!1,t.isMoused=!1})),t&&!this.ui.isAdded&&this.ui.add(),!t&&this.ui.isAdded&&(this.ui.allSelected=!1,this.ui.remove())}get isSelected(){return this.locations.filter((t=>t.isSelected)).length>0}update(t){this.isLocked||this.locations.filter((t=>t.isSelected)).forEach((e=>{e.x+=t[0],e.y+=t[1]}))}get data(){return{src:this.src,locations:this.locations.map((t=>({x:t.x,y:t.y}))),scenes:this.scenes,tags:this.tags}}get settings(){return{isLoaded:this.isLoaded,isLocked:this.isLocked,isSelectable:this.isSelectable}}lock(){this.isLocked=!this.isLocked}}class l extends t{constructor(t,e){super(t,e),this.allSelected=!1,this.prevSelected=void 0}add(){let t=this.panel.addRow("texture","texture");this.rows.push(t);let e=new UIButton({text:"Add",class:"add",key:"a",callback:()=>{d.tool.set("location"),d.tool.callback=(t,e)=>{this.item.addLocation(t,e),delete d.tool.callback,d.tool.set("zoom")}}});t.append(e),d.ui.keys.t=e;let i=new UIToggle({text:"All",class:"all",callback:()=>{this.allSelected=!this.allSelected;for(let t=0;t<this.item.locations.length;t++)this.item.locations[t].isSelected&&(this.prevSelected=t),this.item.locations[t].isSelected=this.allSelected;!this.allSelected&&this.prevSelected&&(this.item.locations[this.prevSelected].isSelected=!0)}});t.append(i),d.ui.keys.a=i,t.append(new UISelect({options:["index","random"],selected:this.item.frame,class:"frame-type",callback:t=>{this.item.frame=t;for(let e=0;e<this.item.items.length;e++){const i=this.item.items[e];i.animation.randomFrames!=t&&("random"==t?(i.animation.randomFrames=!0,i.animation.createNewState("random",0,i.animation.endFrame)):(i.animation.randomFrames=!1,i.animation.createNewState("still",e,e)))}}}));let s=this.panel.addRow("remover","remover");this.rows.push(s),this.item.locations.filter((t=>t.isSelected)).forEach((t=>{s.append(new UIButton({text:`${t.i} X`,callback:()=>{this.item.locations.splice(t.i,1)}}))})),super.add()}remove(){d.ui.keys.t&&delete d.ui.keys.t,d.ui.keys.a&&delete d.ui.keys.a,super.remove()}}const h=new Game({canvas:"map",width:1600,height:800,dps:30,multiColor:!0,checkRetina:!0,scenes:["game"],debug:!0,stats:!1,suspend:!0,isEditor:!0}),d={};d.ui=new Interface(d),d.ui.load("interface/interface.json",(()=>{h.load({scenery:"/data/scenery.json",textures:"/data/textures.json"},!0)})),d.ui.settings=new Settings(d,"edi"),d.ui.game=new function(t,e){this.toggleSuspend=function(){GAME.editorSuspend=!0,GAME.suspend=!GAME.suspend},e&&this.toggleSuspend(),this.setScene=function(e){GAME.scene=e,t.ui.reset()},this.loadAllAnimations=function(){},this.loadAnimations=function(){const e=new UIModal("Load Animations",t,{x:120,y:40});for(const i in GAME.sprites){e.add(new UILabel({text:i})),e.addBreak();for(const s in GAME.sprites[i]){const n=GAME.sprites[i][s];e.add(new UIToggle({onText:s,offText:s,isOn:!n.isLoaded,callback:()=>{n.isLoaded?n.isLoaded=!1:t.loadAnimation(i,s,n.src)}}))}e.addBreak()}}}(d,!0),d.ui.textures=new function(){},d.ui.items=new function(){},d.ui.markers=[],d.zoom=new function(){const t=this;this.canvas={width:void 0,height:void 0},this.view={x:0,y:0,width:void 0,height:void 0},this.previous={x:void 0,y:void 0},this.mouseDown=!1,this.clear=function(t){t.setTransform(1,0,0,1,0,0)},this.set=function(t,e){t.scale(this.canvas.width/this.view.width*GAME.dpr,this.canvas.height/this.view.height*GAME.dpr),t.translate(e.x-this.view.x,e.y-this.view.y)},this.wheel=function(t,e){const i=this.view.width/2+this.view.x,s=this.view.height/2+this.view.y,n=event.wheelDelta<0||event.detail>0?1.1:.9;this.view.width*=n,this.view.height*=n,this.view.x=i-this.view.width/2,this.view.y=s-this.view.height/2,e&&e()},this.getDelta=function(t,e){return{x:(t-this.previous.x)/this.canvas.width*this.view.width,y:(e-this.previous.y)/this.canvas.height*this.view.height}},this.updateView=function(t,e){this.view.x-=t,this.view.y-=e},this.updatePrevious=function(t,e){this.previous.x=t,this.previous.y=e},this.save=function(){localStorage.zoom=JSON.stringify({view:t.view,previous:t.previous})},this.load=function(){if(localStorage.zoom){const e=JSON.parse(localStorage.zoom);for(const i in e)t[i]=e[i]}},this.delete=function(){localStorage.zoom&&delete localStorage.zoom},this.center=function(){t.canvas={width:GAME.width,height:GAME.height},t.view={x:0,y:0,width:GAME.width,height:GAME.height},t.previous={x:void 0,y:void 0}},this.translate=function(e,i){const s=t.canvas.width/t.view.width;return e=e/s+t.view.x-GAME.width/2,i=i/s+t.view.y-GAME.height/2,{x:Math.round(e),y:Math.round(i)}}},d.ruler=new function(){this.x=0,this.y=0,this.width=0,this.height=0,this.update=function(){},this.display=function(t){t.strokeStyle="#bb11ff",t.strokeRect(m.x,m.y,m.w,m.h),t.font="48px monaco",t.fillText(Math.floor(m.w),m.x+m.w/2,m.y-10),t.fillText(Math.floor(m.h),m.x-20,m.y+m.h/2)}},d.tool={set:function(t){const e=t.toolName||t;d.tool.current=e,h.canvas.className="",h.canvas.classList.add(`${e}-tool`)},items:new SpriteCollection,clear:function(){d.tool.items.all((t=>{t.select(!1)})),d.tool.items.clear()},add:function(t){d.tool.items.add(t)}},d.search={sprites:function(t){d.ui.panels.items.itemSearchResults.clear(),h.scenes.current.displaySprites.sprites.filter((e=>t.length&&e.label.includes(t))).forEach((t=>{let e=new UIToggle({text:t.label,callback:()=>{t.select(e.isOn),d.tool.items.add(t)}});d.ui.panels.items.itemSearchResults.append(e)}))}},d.ui.reset=function(){for(const t in GAME.sprites)GAME.sprites[t].removeUI();for(const t in GAME.ui)GAME.ui[t].removeUI()},d.data=new function(t,e){const i=this;function n(i,s){const a=e.files[i],l={};s[a]={};for(const e in t.sprites[a]){const i=t.sprites[a][e];i.isRemoved||(l[e]=i.data,s[a][e]=i.settings)}o(l,`${a}.json`).onwriteend=()=>{i<e.files.length-1?n(++i,s):o(s,"settings.json")}}function o(t,e){const i=JSON.stringify(t),s=new Blob([i],{type:"application/x-download;charset=utf-8"});return saveAs(s,e)}if(this.saveFiledEnabled=!1,this.saveSettingsOnUnload=e.save||!1,this.save=function(){n(0,{})},this.dropSprite=function(i,n,o,l){let c,r="sprites",u="scenery";const p=new UIModal("Add Sprite",d,{x:o,y:l},(function(){c="ui"==r?t[r]:t[r][u];let n=s;"textures"==u&&(n=a),"ui"==u&&(n=UIEdit);let p=new GameAnim;p.load(`${e.path}/sprites/${i}.json`,(function(){const s=new n({animation:p,label:i,src:`${e.path}/sprites/${i}.json`,scenes:[t.scene],locations:[d.zoom.translate(o,l)],...d.zoom.translate(o,l)});c[i]=s,h.scenes.add(s,t.scene),s.isLoaded=!0}))}));p.add(new UISelect({options:["ui","sprites"],selected:r,callback:function(t){r=t}})),p.add(new UISelect({options:Object.keys(h.sprites),selected:u,callback:function(t){u=t}}))},window.File&&window.FileReader&&window.FileList&&window.Blob){i.saveFilesEnabled=!0,console.log("%c Save file enabled ","color:lightgreen;background:black;");const t=document.getElementById("map");t&&(t.addEventListener("dragover",(function(t){t.preventDefault()})),t.addEventListener("drop",(function(t){t.preventDefault(),t.stopPropagation();const e=t.dataTransfer.files;for(let s,n=0;s=e[n];n++){if(!s.type.match("application/json"))continue;const e=new FileReader;e.onload=function(e){i.dropSprite(s.name.split(".")[0],JSON.parse(e.target.result),t.offsetX,t.offsetY)},e.readAsText(s)}})))}window.addEventListener("beforeunload",(function(t){i.saveSettingsOnUnload&&lns.ui.settings.saveSettings(),e.reload&&(t.returnValue="Did you save dumbhole?")}))}(h,{save:!1,path:"/drawings",files:["scenery","textures"]}),d.loadAnimation=function(t,i,s){fetch(s).then((t=>t.json())).then((s=>{h.anims[t][i]=new e,h.anims[t][i].loadData(s,(()=>{h.sprites[t][i].addAnimation(h.anims[t][i]),h.sprites[t][i].isLoaded=!0}))}))}}();
//# sourceMappingURL=src_maps/editor.min.js.map
