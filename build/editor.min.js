class EditUI{constructor(e,t){this.isAdded=!1,this.color="#ff00ff",this.panel=t,this.rows=[],this.item=e,this.docked=!1}add(){const e=this;let t=this.panel.addRow("label","label");this.rows.push(t),t.append(new UIText({value:e.item.label,class:"label",callback:function(t){e.item.label=t}}));let s=this.panel.addRow("edit","edit");this.rows.push(s),s.append(new UIToggle({text:"🐭",class:"selectable",isOn:this.item.isSelectable,callback:()=>{this.item.isSelectable=!this.item.isSelectable}})),s.append(new UIToggle({text:"🔓",class:"lock",isOn:!this.item.isLocked,callback:function(){e.item.lock()}})),s.append(new UIButton({text:"✎",class:"edit",callback:function(){window.open(`${location.origin}/${location.pathname.includes("lines")?"lines/":""}animate/?src=${e.item.src}`,"anim")}})),s.append(new UIButton({text:"🗑️",class:"remove",callback:function(){prompt("remove?")&&(e.item.isRemoved=!0,e.remove())}}));let o=this.panel.addRow("scene","scene");this.rows.push(o),o.append(new UISelect({options:this.item.scenes,selected:this.item.scenes[0],class:"scene-selector",callback:e=>{this.item.scenes[i]=e}})),o.append(new UIButton({text:"+ scene",class:"add-scene",callback:()=>{console.warn("you didnt finish this",this)}})),this.isAdded=!0}remove(){this.rows.forEach(e=>{this.panel.removeRow(e)}),this.rows=[],this.isAdded=!1}update(e){for(const t in e)this[t].value=e[t]}toggle(){this.docked?this.remove():this.add(),this.docked=!this.docked}}class ItemEdit extends Entity{constructor(e,t,i){super(e,t,i),this.src=e.src||t,this.displayLabel=!1,this.displayOutline=!1,this.label=e.label,this.scenes=e.scenes||["game"],this.ui=new ItemEditUI(this,edi.ui.panels.items),this.isLoaded=!1,this.isLocked=!1,this.isSelectable=!0,this.isSelected=!1,this.isRemoved=!1}display(e){this.isRemoved||(super.display(this.isInMapBounds(e)),this.displayLabel&&this.drawLabel(),this.displayOutline&&this.drawOutline())}isInMapBounds(e){return this.xy.x+this.width>e.x-GAME.width/2&&this.xy.x<e.x-GAME.width/2+e.width&&this.xy.y+this.height>e.y-GAME.height/2&&this.xy.y<e.y-GAME.height/2+e.height}drawLabel(){GAME.ctx.fillText(this.label,this.xy.x,this.xy.y)}drawOutline(){GAME.ctx.strokeStyle="#000000",GAME.ctx.strokeRect(this.xy.x,this.xy.y,this.width,this.height),GAME.ctx.strokeStyle=this.ui.color,GAME.ctx.beginPath(),GAME.ctx.arc(this.position.x,this.position.y,5,0,2*Math.PI,!1),GAME.ctx.stroke()}isMouseOver(e,t,i){if(this.isInMapBounds(i.view)&&this.isSelectable){const s=i.translate(e,t);if(s.x>this.xy.x&&s.x<this.xy.x+this.width&&s.y>this.xy.y&&s.y<this.xy.y+this.height)return this.displayLabel=!0,this.displayOutline=!0,this;if(!this.isSelected)return this.displayLabel=!1,this.displayOutline=!1,!1}}select(e){this.isSelected=e,this.displayLabel=e,this.displayOutline=e,e&&!this.ui.added?this.ui.add():this.ui.isAdded&&this.ui.remove()}update(e){this.isLocked||(this.position.add(e),this.ui.update({x:this.position.x,y:this.position.y}))}get data(){return{src:this.src,x:this.position.x,y:this.position.y,scenes:this.scenes}}get settings(){return{isLoaded:this.isLoaded,isLocked:this.isLocked,isSelectable:this.isSelectable}}lock(e){this.isLocked=void 0!==e?e:!this.isLocked}}class ItemEditUI extends EditUI{constructor(e,t){super(e,t)}add(){let e=this.panel.addRow("location","location");this.rows.push(e),e.append(new UILabel({text:"x",class:"x-label"})),this.x=new UIText({value:this.item.position.x,class:"x-input",callback:e=>{this.item.position.x=+e}}),e.append(this.x),e.append(new UILabel({text:"y",class:"y-label"})),this.y=new UIText({value:this.item.position.y,class:"y-input",callback:e=>{this.item.position.y=+e}}),e.append(this.y),e.append(new UIButton({text:"📍",class:"focus",callback:()=>{edi.zoom.view.x=this.item.position.x,edi.zoom.view.y=this.item.position.y}})),super.add()}}class ItemUI extends Entity{constructor(e,t,i){super(e,t,i),this.x=e.x,this.y=e.y}set x(e){this._x=e,this.position.x=e%1!=0?GAME.width*e:e<0?GAME.width+e:e}get x(){return this._x}set y(e){this._y=e,this.position.y=e%1!=0?GAME.height*e:e<0?GAME.height+e:e}get y(){return this._y}display(){GAME.ctx.strokeStyle="#000000",super.display(!0),this.displayLabel&&this.drawLabel(),this.outline&&this.drawOutline()}mouseOver(e,t,i){return e>this.position.x&&e<this.position.x+this.width&&t>this.position.y&&t<this.position.y+this.height?(this.displayLabel=!0,this.outline=!0,i&&(this.selected=!0),this):this.selected?void 0:(this.displayLabel=!1,this.outline=!1,!1)}createUI(){const e=this;super.createUI(),this.ui.x.setValue(this.x),this.ui.x.callback=function(t){e.x=+t},this.ui.y.setValue(this.y),this.ui.y.callback=function(t){e.y=+t}}updatePosition(e,t){this.position.x+=Math.round(e),this.position.y+=Math.round(t)}}class Marker{constructor(e,t){this.position=new Cool.Vector(e,t)}display(){GAME.ctx.strokeStyle="#ff00ff",GAME.ctx.beginPath(),GAME.ctx.moveTo(-50,0),GAME.ctx.lineTo(50,0),GAME.ctx.stroke(),GAME.ctx.strokeStyle="#ffff00",GAME.ctx.beginPath(),GAME.ctx.moveTo(0,-50),GAME.ctx.lineTo(0,50),GAME.ctx.stroke()}}class TextureEdit extends Texture{constructor(e,t){super(e,t),e.src&&(this.src=e.src),this.scenes=e.scenes||["game"],this.label=e.label,this.isLoaded=!1,this.isLocked=!1,this.isSelectable=!0,this.isRemoved=!1,this.ui=new TextureEditUI(this,edi.ui.panels.items)}addAnimation(e){this.animation=e,this.addLocations()}addLocation(e,t){super.addLocation(e,t,this.locations.length)}display(e){if(!this.isRemoved&&this.isLoaded)for(let t=0;t<this.locations.length;t++){let i=this.locations[t].x,s=this.locations[t].y;this.isInMapBounds(e,i,s,this.animation.width,this.animation.height)&&(this.center&&(i-=this.animation.width/2,s-=this.animation.height/2),void 0!==this.locations[t].i&&(this.animation.state="f-"+this.locations[t].i),this.animation.draw(i,s,GAME.suspend),(this.locations[t].isSelected||this.locations[t].isMoused)&&(this.drawLabel(i,s,t),this.drawOutline(i,s)))}}drawLabel(e,t,i){GAME.ctx.fillText(`${this.label} ${i}`,e,t)}drawOutline(e,t){GAME.ctx.strokeStyle="#000000",GAME.ctx.strokeRect(e,t,this.animation.width,this.animation.height),GAME.ctx.strokeStyle=this.ui.color,GAME.ctx.beginPath(),GAME.ctx.arc(e,t,5,0,2*Math.PI,!1),GAME.ctx.stroke()}isInMapBounds(e,t,i,s,o){return t+s>e.x-GAME.width/2&&t<e.x-GAME.width/2+e.width&&i+o>e.y-GAME.height/2&&i<e.y-GAME.height/2+e.height}isMouseOver(e,t,i){if(this.isSelectable&&this.isLoaded){let s=!1;for(let o=0;o<this.locations.length;o++){const n=this.locations[o];if(this.isInMapBounds(i.view,n.x,n.y,this.animation.width,this.animation.height)){const o=i.translate(e,t);o.x>n.x&&o.x<n.x+this.animation.width&&o.y>n.y&&o.y<n.y+this.animation.height?(n.isMoused=!0,s||(s=this)):n.isSelected||(n.isMoused=!1)}}return s}}select(e,t){e?this.locations.filter(e=>e.isMoused).forEach(e=>{t||!e.isSelected||e.isMoused?e.isSelected=!0:e.isSelected=!1,e.isMoused=!1}):this.locations.forEach(e=>{e.isSelected=!1,e.isMoused=!1}),e&&!this.ui.isAdded&&this.ui.add(),!e&&this.ui.isAdded&&this.ui.remove()}get isSelected(){return this.locations.filter(e=>e.isSelected).length>0}update(e){this.isLocked||this.locations.filter(e=>e.isSelected).forEach(t=>{t.x+=e.x,t.y+=e.y})}get data(){return{src:this.src,locations:this.locations.map(e=>({x:e.x,y:e.y})),scenes:this.scenes,tags:this.tags}}get settings(){return{isLoaded:this.isLoaded,isLocked:this.isLocked,isSelectable:this.isSelectable}}lock(){this.isLocked=!this.isLocked}}class TextureEditUI extends EditUI{constructor(e,t){super(e,t),this.allSelected=!1,this.prevSelected=void 0}add(){let e=this.panel.addRow("texture","texture");this.rows.push(e);let t=new UIButton({text:"Add",class:"add",key:"a",callback:()=>{edi.tool.set("location"),edi.tool.callback=(e,t)=>{this.item.addLocation(e,t),delete edi.tool.callback,edi.tool.set("zoom")}}});e.append(t),edi.ui.keys.a=t,e.append(new UIToggle({text:"All",class:"all",callback:()=>{edi.tool.clear(),this.allSelected=!this.allSelected;for(let e=0;e<this.item.locations.length;e++)this.item.locations[e].isSelected&&(this.prevSelected=e),this.item.locations[e].isSelected=this.allSelected;!this.allSelected&&this.prevSelected&&(this.items[this.prevSelected].isSelected=!0)}})),e.append(new UISelect({options:["index","random"],selected:this.item.frame,class:"frame-type",callback:e=>{this.item.frame=e;for(let t=0;t<this.item.items.length;t++){const i=this.item.items[t];i.animation.randomFrames!=e&&("random"==e?(i.animation.randomFrames=!0,i.animation.createNewState("random",0,i.animation.endFrame)):(i.animation.randomFrames=!1,i.animation.createNewState("still",t,t)))}}})),super.add()}}function GameSettings(e){this.toggleSuspend=function(){GAME.editorSuspend=!0,GAME.suspend=!GAME.suspend},this.setScene=function(t){GAME.scene=t,e.ui.reset()},this.loadAnimations=function(){const t=new UIModal("Load Animations",e,{x:120,y:40});for(const i in GAME.sprites){t.add(new UILabel({text:i})),t.addBreak();for(const s in GAME.sprites[i]){const o=GAME.sprites[i][s];t.add(new UIToggle({onText:s,offText:s,isOn:!o.isLoaded,callback:()=>{o.isLoaded?o.isLoaded=!1:e.loadAnimation(i,s,o.src)}}))}t.addBreak()}}}function Data(e,t){const i=this;function s(e,t){const i=JSON.stringify(e),s=new Blob([i],{type:"application/x-download;charset=utf-8"});return saveAs(s,t)}if(this.saveFiledEnabled=!1,this.saveSettingsOnUnload=t.save||!1,this.save=function(){!function i(o,n){const a=t.files[o],d={};n[a]={};for(const t in e.sprites[a]){const i=e.sprites[a][t];i.isRemoved||(d[t]=i.data,n[a][t]=i.settings)}s(d,a+".json").onwriteend=()=>{o<t.files.length-1?(o++,i(o,n)):s(n,"settings.json")}}(0,{})},this.dropSprite=function(i,s,o,n){let a,d="sprites",l="scenery";const c=new UIModal("Add Sprite",edi,{x:o,y:n},(function(){a="ui"==d?e[d]:e[d][l];let s=ItemEdit;"textures"==l&&(s=TextureEdit),"ui"==l&&(s=UIEdit);let c=new GameAnim;c.load(`${t.path}/sprites/${i}.json`,(function(){const d=new s({animation:c,label:i,src:`${t.path}/sprites/${i}.json`,scenes:[e.scene],locations:[edi.zoom.translate(o,n)],...edi.zoom.translate(o,n)});a[i]=d,gme.scenes.add(d,e.scene),d.isLoaded=!0}))}));c.add(new UISelect({options:["ui","sprites"],selected:d,callback:function(e){d=e}})),c.add(new UISelect({options:Object.keys(gme.sprites),selected:l,callback:function(e){l=e}}))},window.File&&window.FileReader&&window.FileList&&window.Blob){i.saveFilesEnabled=!0,console.log("%c Save file enabled ","color:lightgreen;background:black;");const e=document.getElementById("map");e&&(e.addEventListener("dragover",(function(e){e.preventDefault()})),e.addEventListener("drop",(function(e){e.preventDefault(),e.stopPropagation();const t=e.dataTransfer.files;for(let s,o=0;s=t[o];o++){if(!s.type.match("application/json"))continue;const t=new FileReader;t.onload=function(t){i.dropSprite(s.name.split(".")[0],JSON.parse(t.target.result),e.offsetX,e.offsetY)},t.readAsText(s)}})))}window.addEventListener("beforeunload",(function(e){i.saveSettingsOnUnload&&lns.ui.settings.saveSettings(),t.reload&&(e.returnValue="Did you save dumbhole?")}))}function Ruler(){this.x=0,this.y=0,this.width=0,this.height=0,this.update=function(){},this.display=function(e){e.strokeStyle="#bb11ff",e.strokeRect(m.x,m.y,m.w,m.h),e.font="48px monaco",e.fillText(Math.floor(m.w),m.x+m.w/2,m.y-10),e.fillText(Math.floor(m.h),m.x-20,m.y+m.h/2)}}function Zoom(){const e=this;this.canvas={width:void 0,height:void 0},this.view={x:0,y:0,width:void 0,height:void 0},this.previous={x:void 0,y:void 0},this.mouseDown=!1,this.clear=function(e){e.setTransform(1,0,0,1,0,0)},this.set=function(e,t){e.scale(this.canvas.width/this.view.width*GAME.dpr,this.canvas.height/this.view.height*GAME.dpr),e.translate(t.x-this.view.x,t.y-this.view.y)},this.wheel=function(e,t){const i=this.view.width/2+this.view.x,s=this.view.height/2+this.view.y,o=event.wheelDelta<0||event.detail>0?1.1:.9;this.view.width*=o,this.view.height*=o,this.view.x=i-this.view.width/2,this.view.y=s-this.view.height/2,t&&t()},this.getDelta=function(e,t){return{x:(e-this.previous.x)/this.canvas.width*this.view.width,y:(t-this.previous.y)/this.canvas.height*this.view.height}},this.updateView=function(e,t){this.view.x-=e,this.view.y-=t},this.updatePrevious=function(e,t){this.previous.x=e,this.previous.y=t},this.save=function(){localStorage.zoom=JSON.stringify({view:e.view,previous:e.previous,canvas:e.canvas})},this.load=function(){if(localStorage.zoom){const t=JSON.parse(localStorage.zoom);for(const i in t)e[i]=t[i]}},this.center=function(){e.canvas={width:GAME.width,height:GAME.height},e.view={x:0,y:0,width:GAME.width,height:GAME.height},e.previous={x:void 0,y:void 0}},this.translate=function(t,i){const s=e.canvas.width/e.view.width;return t=t/s+e.view.x-GAME.width/2,i=i/s+e.view.y-GAME.height/2,{x:Math.round(t),y:Math.round(i)}}}function Items(){}function Textures(){}const gme=new Game({canvas:"map",width:960,height:720,dps:30,multiColor:!0,checkRetina:!0,scenes:["game"],debug:!0,stats:!1,suspend:!0}),edi={};function start(){gme.sprites={scenery:{},textures:{}};for(const e in gme.data.scenery.entries){const t=gme.data.scenery.entries[e],i=new ItemEdit({...t,label:e});gme.anims.scenery[e]&&i.addAnimation(gme.anims.scenery[e]),gme.scenes.add(i,t.scenes),gme.updateBounds(i.position),gme.sprites.scenery[e]=i}for(const e in gme.data.textures.entries){const t=gme.data.textures.entries[e],i=new TextureEdit({...t,frame:"index",label:e});gme.anims.textures[e]&&i.addAnimation(gme.anims.textures[e]),gme.scenes.add(i,t.scenes);for(let e=0;e<t.locations.length;e++)gme.updateBounds(t.locations[e]);gme.sprites.textures[e]=i}edi.zoom.canvas.width=edi.zoom.view.width=GAME.width,edi.zoom.canvas.height=edi.zoom.view.height=GAME.height,edi.zoom.load(),edi.tool.set("zoom"),edi.ui.markers.center=new Marker(0,0),gme.canvas.addEventListener("mousewheel",(function(e){edi.zoom.wheel(e,(function(){gme.ctx.miterLimit=1}))}),!1),edi.ui.faces.scenes.setOptions(gme.scenes),fetch("/data/settings.json").then(e=>e.json()).then(e=>{for(const t in e)for(const i in e[t]){const s=gme.sprites[t][i],o=e[t][i];try{s.select(!1),o.isLoaded&&!gme.anims[t][i]&&edi.loadAnimation(t,i,s.src),s.isSelectable=o.isSelectable,s.isLocked=o.isLocked}catch(e){console.warn(e.message)}}}),edi.ui.settings.load(),gme.scene="game"}function draw(){edi.zoom.clear(gme.ctx),edi.zoom.set(gme.ctx,{x:gme.width/2,y:gme.height/2}),gme.ctx.font="16px monaco",gme.ctx.fillStyle="#bb11ff";for(const e in edi.ui.markers)edi.ui.markers[e].display();gme.scenes.current.display(edi.zoom.view),"ruler"==edi.tool.current&&edi.ruler.display(),edi.zoom.clear(gme.ctx)}function mouseMoved(e,t,i){if(1==i&&edi.zoom.mouseDown){const i=edi.zoom.getDelta(e,t);"transform"==edi.tool.current&&edi.tool.items.length>0?edi.tool.items.all(e=>{e.update({x:Math.round(i.x),y:Math.round(i.y)})}):edi.zoom.updateView(i.x,i.y)}edi.zoom.updatePrevious(e,t),edi.tool.item||intersectItems(e,t,!1)}function mouseDown(e,t,i,s){if(1==i)if("location"==edi.tool.current){const i=edi.zoom.translate(e,t);edi.tool.callback(i.x,i.y)}else{const i=intersectItems(e,t);edi.tool.items.length>0?i&&s?i.select(!0,s):i&&!s?edi.tool.items.includes(i)?"TextureEdit"==i.constructor.name&&i.select(!0,s):(edi.tool.clear(),i.select(!0,s)):i||edi.tool.clear():i&&i.select(!0),i.isSelected?edi.tool.items.add(i):edi.tool.items.remove(i),edi.zoom.mouseDown=!0,edi.zoom.previous.x||(edi.zoom.previous.x=e),edi.zoom.previous.y||(edi.zoom.previous.y=t)}}function mouseUp(e,t,i){1==i&&(edi.zoom.mouseDown=!1)}function intersectItems(e,t,i){let s=!1;for(let i=0;i<gme.scenes.current.displaySprites.length;i++){const o=gme.scenes.current.displaySprites.sprite(i);o.isMouseOver(e,t,edi.zoom)&&!s&&(s=o)}return s}edi.ui=new Interface(edi),edi.ui.load("interface/interface.json",()=>{gme.load({scenery:"/data/scenery.json",textures:"/data/textures.json"},!0)}),edi.ui.settings=new Settings(edi,"edi"),edi.ui.game=new GameSettings(edi),edi.ui.textures=new Textures,edi.ui.items=new Items,edi.ui.markers={},edi.zoom=new Zoom,edi.ruler=new Ruler,edi.tool={set:function(e){const t=e.toolName||e;edi.tool.current=t,gme.canvas.className="",gme.canvas.classList.add(t+"-tool")},items:new SpriteCollection,clear:function(){edi.tool.items.all(e=>{e.select(!1)}),edi.tool.items.clear()}},edi.search={sprites:function(e){edi.ui.panels.items.itemSearchResults.clear(),gme.scenes.current.displaySprites.sprites.filter(t=>e.length&&t.label.includes(e)).forEach(e=>{let t=new UIToggle({text:e.label,callback:()=>{e.select(t.isOn)}});edi.ui.panels.items.itemSearchResults.append(t)})}},edi.ui.reset=function(){for(const e in GAME.sprites)GAME.sprites[e].removeUI();for(const e in GAME.ui)GAME.ui[e].removeUI()},edi.data=new Data(gme,{save:!1,path:"/drawings",files:["scenery","textures"]}),edi.loadAnimation=function(e,t,i){gme.debug&&console.log("loading "+i),gme.debug&&console.time("done "+i),fetch(i).then(e=>e.json()).then(s=>{console.timeEnd("done "+i),gme.anims[e][t]=new GameAnim,gme.anims[e][t].loadData(s,()=>{gme.sprites[e][t].addAnimation(gme.anims[e][t]),gme.sprites[e][t].isLoaded=!0})})};
//# sourceMappingURL=src_maps/editor.min.js.map
