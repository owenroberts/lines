Array.prototype.insert=function(t,e){this.splice(t,0,e)},Number.prototype.clamp=function(t,e){return Math.min(Math.max(this,t),e)},"undefined"!=typeof window&&(window.requestAnimFrame=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(t,e){window.setTimeout(t,1e3/60)}),Cool={},Cool.map=function(t,e,s,i,r){return i+(r-i)*(t-e)/(s-e)||0},Cool.padNumber=function(t,e){let s=""+t;for(;s.length<e;)s="0"+s;return s},Cool.random=function(t,e){return e?Math.random()*(e-t)+t:"number"==typeof t?Math.random()*t:Array.isArray(t)?t[Math.floor(Math.random()*t.length)]:"object"==typeof t?t[Cool.random(Object.keys(t))]:void 0},Cool.randomInt=function(t,e){return e||(e=t,t=0),Math.round(Math.random()*(e-t)+t)},Cool.randomNormalInverse=function(){let t=0,e=0;for(;0===t;)t=Math.random();for(;0===e;)e=Math.random();const s=Math.sqrt(-2*Math.log(t))*Math.cos(2*Math.PI*e);let i=Cool.map(s,-3.5,3.5,0,1);return i>.5?i-.5:i+.5},Cool.componentToHex=function(t){var e=t.toString(16);return 1==e.length?"0"+e:e},Cool.HueToRgb=function(t,e,s){return s<0?s+=1:s>1&&(s-=1),255*(6*s<1?t+(e-t)*s*6:2*s<1?e:3*s<2?t+(e-t)*(2/3-s)*6:t)},Cool.hslToHex=function(t){for(var e=0,s=0,i=0,n=0,a=0,o=0,h=0;a<t.length;a++){var d=t.charCodeAt(a);if(d>=48&&d<=57)n=10*n+(d-48),h=1;else{if(1===h){switch(o){case 0:e=n%360/360;break;case 1:s=(n>100?100:n)/100;break;case 2:i=(n>100?100:n)/100}o++}h=0,n=0}}var l=e/(1/6),m=(t=(1-Math.abs(2*i-1))*s)*(1-Math.abs(l%2-1));switch(0|l){case 0:r=t,g=m,b=0;break;case 1:r=m,g=t,b=0;break;case 2:r=0,g=t,b=m;break;case 3:r=0,g=m,b=t;break;case 4:r=m,g=0,b=t;break;case 5:r=t,g=0,b=m}var c=i-.5*t;r+=c,g+=c,b+=c,r=255*r|0,g=255*g|0,b=255*b|0;var u="";return(h=48+(r>>4&15))>57&&(h+=7),u+=String.fromCharCode(h),(h=48+(15&r))>57&&(h+=7),u+=String.fromCharCode(h),(h=48+(g>>4&15))>57&&(h+=7),u+=String.fromCharCode(h),(h=48+(15&g))>57&&(h+=7),u+=String.fromCharCode(h),(h=48+(b>>4&15))>57&&(h+=7),u+=String.fromCharCode(h),(h=48+(15&b))>57&&(h+=7),u+=String.fromCharCode(h)},Cool.hexToRgb=function(t){var e=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(t);return e?{r:parseInt(e[1],16),g:parseInt(e[2],16),b:parseInt(e[3],16)}:null},Cool.rgbToHsl=function(t){t.r/=255,t.g/=255,t.b/=255;var e,s,i=Math.max(t.r,t.g,t.b),r=Math.min(t.r,t.g,t.b),n=(i+r)/2;if(i==r)e=s=0;else{var a=i-r;switch(s=n>.5?a/(2-i-r):a/(i+r),i){case t.r:e=(t.g-t.b)/a+(t.g<t.b?6:0);break;case t.g:e=(t.b-t.r)/a+2;break;case t.b:e=(t.r-t.g)/a+4}e/=6}return[360*e+.5|0,100*s+.5|0,100*n+.5|0]},Cool.rgb2hex=function(t){var e=t.replace(/\s/g,"").match(/^rgba?\((\d+),(\d+),(\d+)/i);return e&&4===e.length?"#"+("0"+parseInt(e[1],10).toString(16)).slice(-2)+("0"+parseInt(e[2],10).toString(16)).slice(-2)+("0"+parseInt(e[3],10).toString(16)).slice(-2):t},Cool.keys={9:"tab",13:"enter",27:"escape",32:"space",37:"left",38:"up",39:"right",40:"down",48:"0",49:"1",50:"2",51:"3",52:"4",53:"5",54:"6",55:"7",56:"8",57:"9",65:"a",66:"b",67:"c",68:"d",69:"e",70:"f",71:"g",72:"h",73:"i",74:"j",75:"k",76:"l",77:"m",78:"n",79:"o",80:"p",81:"q",82:"r",83:"s",84:"t",85:"u",86:"v",87:"w",88:"x",89:"y",90:"z",186:";",187:"+",192:"`",220:"backslash",222:"'"},Cool.Vector=function(t,e){this.x=t||0,this.y=e||0,Array.isArray(this.x)&&(this.x=t[0],this.y=t[1]),this.random=function(t,e,s,i){return 1==arguments.length?(this.x=Cool.random(-t,t),this.y=Cool.random(-t,t)):2==arguments.length?(this.x=Cool.random(t,e),this.y=Cool.random(t,e)):4==arguments.length?(this.x=Cool.random(t,e),this.y=Cool.random(s,i)):console.error("You need 1, 2 or 4 arguments, dingus."),this},this.zero=function(){return!(Math.abs(this.x)>0||Math.abs(this.y)>0)},this.add=function(t){return this.x+=t.x,this.y+=t.y,this},this.subtract=function(t){return this.x-=t.x,this.y-=t.y,this},this.multiply=function(t){return"object"==typeof t?(this.x*=t.x,this.y*=t.y):(this.x*=t,this.y*=t),this},this.divide=function(t){return"object"==typeof t?(this.x/=t.x,this.y/=t.y):(this.x/=t,this.y/=t),this},this.magnitude=function(){return Math.sqrt(this.x*this.x+this.y*this.y)},this.normalize=function(){var t=this.magnitude();return 0!=t&&1!=t&&this.divide(t),this},this.copy=function(){return new Cool.Vector(this.x,this.y)},this.dist=function(t){var e=new Cool.Vector(t.x,t.y);return e.subtract(this),e.magnitude()},this.round=function(){this.x=Math.round(this.x),this.y=Math.round(this.y)},this.getObj=function(){return{x:this.x,y:this.y}},this.clone=function(){return new Cool.Vector(this.x,this.y)}},Cool.mobilecheck=function(){var t,e=!1;return t=navigator.userAgent||navigator.vendor||window.opera,(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od|ad)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4)))&&(e=!0),e},"undefined"!=typeof module&&(module.exports=Cool);class Drawing{constructor(t){if(this.points=[],t)for(let e=0;e<t.length;e++)this.add(t[e]);this.lastDrawCount=0}add(t){"end"==t||0===t?this.points.push("end"):Array.isArray(t)?this.points.push(new Cool.Vector(t)):(t.off=[],this.points.push(t))}pop(){this.points.pop()}get(t){return t<0?this.points[this.points.length-t]:this.points[t]}get length(){return this.points.length}get needsUpdate(){return this.lastDrawCount<drawCount&&(this.lastDrawCount=drawCount,!0)}update(t){const{segmentNum:e,jiggleRange:s,wiggleRange:i,wiggleSpeed:r,wiggleSegments:n}=t,a=(new Cool.Vector).random(r),o=(new Cool.Vector).random(0,i);for(let t=0,r=this.points.length;t<r;t++)if("end"!=this.points[t]){this.points[t].off=[];for(let r=0;r<e;r++){if(i>0&&(0===r||n)){o.add(a);for(const t in a)(o[t]>=i||o[t]<=-i)&&(a[t]*=-1)}this.points[t].off.push({x:Cool.random(-s,s)+o.x,y:Cool.random(-s,s)+o.y})}}}}class Layer{constructor(t,e){this.drawingIndex=t.drawingIndex,this.tweens=t.tweens||[],this.x=t.x||0,this.y=t.y||0,this._startFrame=t.startFrame,this._endFrame=t.endFrame||t.startFrame,this.drawingStartIndex=t.drawingStartIndex||0,this.drawingEndIndex=t.drawingEndIndex||-1,this.color=t.color||"#000000",this.segmentNum=t.segmentNum,this.jiggleRange=t.jiggleRange,this.wiggleRange=t.wiggleRange,this.wiggleSpeed=t.wiggleSpeed,this.wiggleSegments=t.wiggleSegments||!1,this.breaks=t.breaks||!1,t.order&&(this.order=t.order),this.linesInterval=t.linesInterval,this.linesCount=t.linesCount||0,this.isToggled=!1,this.resetTweens()}get startFrame(){return this._startFrame}set startFrame(t){this._startFrame=Math.max(0,+t),this.resetTweens()}get endFrame(){return this._endFrame}set endFrame(t){this._endFrame=Math.max(0,+t),this.resetTweens()}resetTweens(){for(let t=0;t<this.tweens.length;t++){const e=this.tweens[t];e.startFrame<this.startFrame&&(e.startFrame=this.startFrame),e.endFrame>this.endFrame&&(e.endFrame=this.endFrame)}}isInFrame(t){return t>=this.startFrame&&t<=this.endFrame}get drawProps(){const t={segmentNum:this.segmentNum,jiggleRange:this.jiggleRange,wiggleRange:this.wiggleRange,wiggleSpeed:this.wiggleSpeed,wiggleSegments:this.wiggleSegments,x:this.x,y:this.y,color:this.color,startIndex:this.drawingStartIndex,endIndex:this.drawingEndIndex};return this.tweens&&(t.tweens=this.tweens),t}}class Lines{constructor(t,e,s){this.ctx=t,this.isLoaded=!1,this.isPlaying=!1,this.multiColor=s||!1,this.drawings=[],this.layers=[],this.dps=e||30,this.fps=5,this.currentFrame=0,this.drawsPerFrame=Math.round(this.dps/this.fps),this.drawCount=0,this.override={},this._state="default",this.states={default:{start:0,end:0}}}randomCount(){this.drawCount=Cool.randomInt(this.drawsPerFrame)}set fps(t){this._fps=+t,this.drawsPerFrame=Math.round(this.dps/this.fps),this.drawCount=0}get fps(){return this._fps}set frame(t){this.currentFrame=+t,this.states.default&&this.states.default.end!=this.endFrame&&(this.states.default.end=this.endFrame)}get endFrame(){const t=this.layers.map(t=>t.endFrame);return Math.max.apply(Math,t)}set state(t){this._state!=t&&this.states[t]&&(this._state=t,this.state&&(this.frame=this.state.start))}get state(){return this.states[this._state]}get stateName(){return this._state}setLinesUpdate(t){this.layers.forEach(e=>{e.linesInterval=t})}overrideProperty(t,e){this.override[t]=e}cancelOverride(){this.override={}}update(){this.isPlaying&&(this.drawCount==this.drawsPerFrame&&(this.currentFrame>=this.state.end?(this.currentFrame=this.state.start,this.onPlayedState&&this.onPlayedState()):this.currentFrame++,this.drawCount=0),this.drawCount++,this.onUpdate&&this.onUpdate())}draw(t,e,s){this.multiColor||this.ctx.beginPath();for(let i=0,r=this.layers.length;i<r;i++)if(this.layers[i].isInFrame(this.currentFrame)){const r=this.layers[i],n=this.drawings[r.drawingIndex],a=r.drawProps;if(t&&(a.x+=t),e&&(a.y+=e),a.tweens)for(let t=0;t<a.tweens.length;t++){const e=a.tweens[t];e.startFrame<=this.currentFrame&&e.endFrame>=this.currentFrame&&(a[e.prop]=Cool.map(this.currentFrame,e.startFrame,e.endFrame,e.startValue,e.endValue),"startIndex"!=e.prop&&"endIndex"!=e.prop||(a[e.prop]=Math.round(a[e.prop])))}for(const t in this.override)a[t]=this.override[t];s||(r.linesCount>=r.linesInterval&&n.needsUpdate?(n.update(a),r.linesCount=0):n.needsUpdate&&r.linesCount++),this.multiColor&&this.ctx.beginPath();let{endIndex:o,startIndex:h}=a;o<0&&(o=n.length);for(let t=h;t<o-1;t++){const e=n.get(t),s=n.get(t+1);if("end"!==e&&"end"!==s){const t=[...e.off,...s.off];if(t.length<a.segmentNum+1)for(let e=t.length-1;e<a.segmentNum+1;e++)t.push(new Cool.Vector);if(1===a.segmentNum)this.simplePixelLine(a.x+e.x+t[0].x,a.y+e.y+t[0].y,a.x+s.x+t[1].x,a.y+s.y+t[1].y);else{const i=new Cool.Vector(s.x,s.y);i.subtract(e),i.divide(a.segmentNum);for(let s=0;s<a.segmentNum;s++){const r=e.clone().add(i.clone().multiply(s)),n=e.clone().add(i.clone().multiply(s+1));a.breaks;this.simplePixelLine(a.x+r.x+t[s].x,a.y+r.y+t[s].y,a.x+n.x+t[s+1].x,a.y+n.y+t[s+1].y)}}this.ctx.fillStyle!==a.color&&this.multiColor&&(this.ctx.fillStyle=a.color)}}this.multiColor&&this.ctx.fill()}this.multiColor||this.ctx.fill(),this.onDraw&&this.onDraw()}simplePixelLine(t,e,s,i){const r=this.ctx.lineWidth;t=Math.round(t),e=Math.round(e),s=Math.round(s),i=Math.round(i);let n=Math.abs(s-t),a=Math.abs(i-e),o=t<s?1:-1,h=e<i?1:-1,d=n-a;for(;this.ctx.rect(t,e,r,r),t!==s||e!==i;){let s=2*d;s>-a&&(d-=a,t+=o),s<n&&(d+=n,e+=h)}}pixelLine(t,e,s,i){const r=this.ctx.lineWidth;t=Math.round(t),s=Math.round(s),e=Math.round(e),i=Math.round(i);const n=Math.abs(s-t),a=t<s?1:-1,o=Math.abs(i-e),h=e<i?1:-1;let d,l,m,g=n;if(n>o){if(d=n/2,m=t>s?1:0,o>1){d=0,g=o-1;do{l=d/o+2|0,this.ctx.rect(t-l*m,e,l,r),t+=l*a,e+=h,d-=l*o-n}while(g--)}d>0&&this.ctx.rect(t,i,s-t,r)}else if(n<o){if(d=o/2,m=e>i?1:0,n>1){d=0,g--;do{l=d/n+2|0,this.ctx.rect(t,e-l*m,r,l),e+=l*h,t+=a,d-=l*n-o}while(g--)}d>0&&this.ctx.rect(s,e,r,i-e)}else do{this.ctx.rect(t,e,r,r),t+=a,e+=h}while(g--)}load(t,e){fetch(t).then(t=>t.json()).then(t=>{this.loadData(t,e)}).catch(t=>{console.error(t)})}loadJSON(t,e){this.loadData(t,e)}loadData(t,e){this.isLoaded=!0;for(let e=0;e<t.d.length;e++)this.drawings[e]=t.d[e]?new Drawing(t.d[e]):null;const s=Math.round(5*Math.random());for(let e=0;e<t.l.length;e++){const i=this.loadParams(t.l[e]);i.drawingEndIndex=this.drawings[i.drawingIndex].length,i.linesCount=s;const r=new Layer(i);this.layers[e]=r,this.drawings[r.drawingIndex].update(r)}for(const e in t.s)this.states[e]={start:t.s[e][0],end:t.s[e][1]};this.states.default&&(this.states.default.end=this.endFrame),this.fps=t.fps,t.mc&&(this.multiColor=t.mc),this.width=t.w,this.height=t.h,e&&e(t),this.onLoad&&this.onLoad()}loadParams(t){const e={drawingIndex:t.d,startFrame:t.f[0],endFrame:t.f[1],x:t.x||0,y:t.y||0,color:t.c,segmentNum:t.n,jiggleRange:t.r,wiggleRange:t.w,wiggleSpeed:t.v,wiggleSegments:t.ws,breaks:t.b||!1,linesInterval:t.l||5};return t.t&&(e.tweens=t.t.map(t=>({prop:t[0],startFrame:t[1],endFrame:t[2],startValue:t[3],endValue:t[4]}))),t.o&&(e.order=t.o),e}setOnLoad(t){this.isLoaded?t():this.onLoad=t}}
//# sourceMappingURL=src_maps/base.min.js.map
